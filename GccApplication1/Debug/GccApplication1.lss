
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001118  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001c  00800060  00001118  000011ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001c  0080007c  0080007c  000011c8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000011c8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001224  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00001260  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ea8  00000000  00000000  00001308  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000759  00000000  00000000  000021b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006ee  00000000  00000000  00002909  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000016c  00000000  00000000  00002ff8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000044c  00000000  00000000  00003164  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007c5  00000000  00000000  000035b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00003d75  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ab 00 	jmp	0x156	; 0x156 <__ctors_end>
       4:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
       8:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
       c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      10:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      14:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      18:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      1c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      20:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      24:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      28:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      2c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      30:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      34:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      38:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      3c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      40:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      44:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      48:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      4c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      50:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	6e 61       	ori	r22, 0x1E	; 30
      56:	6e 00       	.word	0x006e	; ????

00000058 <__c.2332>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <__ctors_end>:
     156:	11 24       	eor	r1, r1
     158:	1f be       	out	0x3f, r1	; 63
     15a:	cf e5       	ldi	r28, 0x5F	; 95
     15c:	d8 e0       	ldi	r29, 0x08	; 8
     15e:	de bf       	out	0x3e, r29	; 62
     160:	cd bf       	out	0x3d, r28	; 61

00000162 <__do_copy_data>:
     162:	10 e0       	ldi	r17, 0x00	; 0
     164:	a0 e6       	ldi	r26, 0x60	; 96
     166:	b0 e0       	ldi	r27, 0x00	; 0
     168:	e8 e1       	ldi	r30, 0x18	; 24
     16a:	f1 e1       	ldi	r31, 0x11	; 17
     16c:	02 c0       	rjmp	.+4      	; 0x172 <__do_copy_data+0x10>
     16e:	05 90       	lpm	r0, Z+
     170:	0d 92       	st	X+, r0
     172:	ac 37       	cpi	r26, 0x7C	; 124
     174:	b1 07       	cpc	r27, r17
     176:	d9 f7       	brne	.-10     	; 0x16e <__do_copy_data+0xc>

00000178 <__do_clear_bss>:
     178:	20 e0       	ldi	r18, 0x00	; 0
     17a:	ac e7       	ldi	r26, 0x7C	; 124
     17c:	b0 e0       	ldi	r27, 0x00	; 0
     17e:	01 c0       	rjmp	.+2      	; 0x182 <.do_clear_bss_start>

00000180 <.do_clear_bss_loop>:
     180:	1d 92       	st	X+, r1

00000182 <.do_clear_bss_start>:
     182:	a8 39       	cpi	r26, 0x98	; 152
     184:	b2 07       	cpc	r27, r18
     186:	e1 f7       	brne	.-8      	; 0x180 <.do_clear_bss_loop>
     188:	0e 94 ad 01 	call	0x35a	; 0x35a <main>
     18c:	0c 94 8a 08 	jmp	0x1114	; 0x1114 <_exit>

00000190 <__bad_interrupt>:
     190:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000194 <halfbytecommand>:
//
int cod;// Переменная в которую записывается результат преобразования
//Функция отправки полубайтных команд при инициализации
void halfbytecommand(unsigned halfbyte)
{
RS_0;//Установим RS=0 - отправка команды
     194:	92 b3       	in	r25, 0x12	; 18
     196:	9b 7f       	andi	r25, 0xFB	; 251
     198:	92 bb       	out	0x12, r25	; 18
E_1;//E=1;
     19a:	92 b3       	in	r25, 0x12	; 18
     19c:	98 60       	ori	r25, 0x08	; 8
     19e:	92 bb       	out	0x12, r25	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1a0:	95 e8       	ldi	r25, 0x85	; 133
     1a2:	9a 95       	dec	r25
     1a4:	f1 f7       	brne	.-4      	; 0x1a2 <halfbytecommand+0xe>
     1a6:	00 00       	nop
_delay_us(50);
LCD_Port&=0x0F;//Обнулим старший байт
     1a8:	92 b3       	in	r25, 0x12	; 18
     1aa:	9f 70       	andi	r25, 0x0F	; 15
     1ac:	92 bb       	out	0x12, r25	; 18
LCD_Port|=halfbyte&0xF0;//Запишем только в старший байт
     1ae:	92 b3       	in	r25, 0x12	; 18
     1b0:	80 7f       	andi	r24, 0xF0	; 240
     1b2:	89 2b       	or	r24, r25
     1b4:	82 bb       	out	0x12, r24	; 18
     1b6:	85 e8       	ldi	r24, 0x85	; 133
     1b8:	8a 95       	dec	r24
     1ba:	f1 f7       	brne	.-4      	; 0x1b8 <halfbytecommand+0x24>
     1bc:	00 00       	nop
_delay_us(50);
E_0;//E=0;
     1be:	82 b3       	in	r24, 0x12	; 18
     1c0:	87 7f       	andi	r24, 0xF7	; 247
     1c2:	82 bb       	out	0x12, r24	; 18
     1c4:	95 e8       	ldi	r25, 0x85	; 133
     1c6:	9a 95       	dec	r25
     1c8:	f1 f7       	brne	.-4      	; 0x1c6 <halfbytecommand+0x32>
     1ca:	00 00       	nop
     1cc:	08 95       	ret

000001ce <sendbyte_to_LCD>:
_delay_us(50);	
}
//Функция отправки байта
void sendbyte_to_LCD(unsigned char byte, unsigned char RS)
{
	if (RS==0)RS_0;//Если RS=0 - отправка команды
     1ce:	61 11       	cpse	r22, r1
     1d0:	04 c0       	rjmp	.+8      	; 0x1da <sendbyte_to_LCD+0xc>
     1d2:	92 b3       	in	r25, 0x12	; 18
     1d4:	9b 7f       	andi	r25, 0xFB	; 251
     1d6:	92 bb       	out	0x12, r25	; 18
     1d8:	03 c0       	rjmp	.+6      	; 0x1e0 <sendbyte_to_LCD+0x12>
	else RS_1;//Если RS=1 - отправка данных
     1da:	92 b3       	in	r25, 0x12	; 18
     1dc:	94 60       	ori	r25, 0x04	; 4
     1de:	92 bb       	out	0x12, r25	; 18
	//Отправим старшую половину байта
	E_1;//E=1;
     1e0:	92 b3       	in	r25, 0x12	; 18
     1e2:	98 60       	ori	r25, 0x08	; 8
     1e4:	92 bb       	out	0x12, r25	; 18
     1e6:	95 e8       	ldi	r25, 0x85	; 133
     1e8:	9a 95       	dec	r25
     1ea:	f1 f7       	brne	.-4      	; 0x1e8 <sendbyte_to_LCD+0x1a>
     1ec:	00 00       	nop
	_delay_us(50);
	LCD_Port&=0x0F;//Обнулим старший байт
     1ee:	92 b3       	in	r25, 0x12	; 18
     1f0:	9f 70       	andi	r25, 0x0F	; 15
     1f2:	92 bb       	out	0x12, r25	; 18
	LCD_Port|=byte&0xF0;//Запишем только в старший байт
     1f4:	92 b3       	in	r25, 0x12	; 18
     1f6:	28 2f       	mov	r18, r24
     1f8:	20 7f       	andi	r18, 0xF0	; 240
     1fa:	92 2b       	or	r25, r18
     1fc:	92 bb       	out	0x12, r25	; 18
     1fe:	95 e8       	ldi	r25, 0x85	; 133
     200:	9a 95       	dec	r25
     202:	f1 f7       	brne	.-4      	; 0x200 <sendbyte_to_LCD+0x32>
     204:	00 00       	nop
	_delay_us(50);
	E_0;//E=0;
     206:	92 b3       	in	r25, 0x12	; 18
     208:	97 7f       	andi	r25, 0xF7	; 247
     20a:	92 bb       	out	0x12, r25	; 18
     20c:	95 e8       	ldi	r25, 0x85	; 133
     20e:	9a 95       	dec	r25
     210:	f1 f7       	brne	.-4      	; 0x20e <sendbyte_to_LCD+0x40>
     212:	00 00       	nop
	_delay_us(50);
	//Отправим младшую половину байта
	byte=byte<<4;//Сдвинуть на 4 позиции младшую половину байта
     214:	82 95       	swap	r24
     216:	80 7f       	andi	r24, 0xF0	; 240
	E_1;//E=1;
     218:	92 b3       	in	r25, 0x12	; 18
     21a:	98 60       	ori	r25, 0x08	; 8
     21c:	92 bb       	out	0x12, r25	; 18
     21e:	95 e8       	ldi	r25, 0x85	; 133
     220:	9a 95       	dec	r25
     222:	f1 f7       	brne	.-4      	; 0x220 <sendbyte_to_LCD+0x52>
     224:	00 00       	nop
	_delay_us(50);
	LCD_Port&=0x0F;//Обнулим старший байт
     226:	92 b3       	in	r25, 0x12	; 18
     228:	9f 70       	andi	r25, 0x0F	; 15
     22a:	92 bb       	out	0x12, r25	; 18
	LCD_Port|=byte&0xF0;//Запишем только в старший байт
     22c:	92 b3       	in	r25, 0x12	; 18
     22e:	89 2b       	or	r24, r25
     230:	82 bb       	out	0x12, r24	; 18
     232:	85 e8       	ldi	r24, 0x85	; 133
     234:	8a 95       	dec	r24
     236:	f1 f7       	brne	.-4      	; 0x234 <sendbyte_to_LCD+0x66>
     238:	00 00       	nop
	_delay_us(50);
	E_0;//E=0;
     23a:	82 b3       	in	r24, 0x12	; 18
     23c:	87 7f       	andi	r24, 0xF7	; 247
     23e:	82 bb       	out	0x12, r24	; 18
     240:	95 e8       	ldi	r25, 0x85	; 133
     242:	9a 95       	dec	r25
     244:	f1 f7       	brne	.-4      	; 0x242 <sendbyte_to_LCD+0x74>
     246:	00 00       	nop
     248:	08 95       	ret

0000024a <LCD_ini>:
	_delay_us(50);
}
//Инициализация дисплея
void LCD_ini(void)
{
	LCD_Port_out;//Настроим  порт дисплея на выход
     24a:	81 b3       	in	r24, 0x11	; 17
     24c:	80 6f       	ori	r24, 0xF0	; 240
     24e:	81 bb       	out	0x11, r24	; 17
	LCD_Port=0x00;//Обнулим порт дисплея
     250:	12 ba       	out	0x12, r1	; 18
	RS_out;//Вывод управления RS на выход
     252:	81 b3       	in	r24, 0x11	; 17
     254:	84 60       	ori	r24, 0x04	; 4
     256:	81 bb       	out	0x11, r24	; 17
	E_out;//Вывод управления E на выход
     258:	81 b3       	in	r24, 0x11	; 17
     25a:	88 60       	ori	r24, 0x08	; 8
     25c:	81 bb       	out	0x11, r24	; 17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     25e:	8f e5       	ldi	r24, 0x5F	; 95
     260:	9a ee       	ldi	r25, 0xEA	; 234
     262:	01 97       	sbiw	r24, 0x01	; 1
     264:	f1 f7       	brne	.-4      	; 0x262 <LCD_ini+0x18>
     266:	00 c0       	rjmp	.+0      	; 0x268 <LCD_ini+0x1e>
     268:	00 00       	nop
	//Установка разрядности интерфейса (важен только старший полубайт)
	_delay_ms(30);
	halfbytecommand(0b00110000);
     26a:	80 e3       	ldi	r24, 0x30	; 48
     26c:	90 e0       	ldi	r25, 0x00	; 0
     26e:	0e 94 ca 00 	call	0x194	; 0x194 <halfbytecommand>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     272:	9d e6       	ldi	r25, 0x6D	; 109
     274:	9a 95       	dec	r25
     276:	f1 f7       	brne	.-4      	; 0x274 <LCD_ini+0x2a>
     278:	00 00       	nop
	_delay_us(41);
	halfbytecommand(0b00110000);
     27a:	80 e3       	ldi	r24, 0x30	; 48
     27c:	90 e0       	ldi	r25, 0x00	; 0
     27e:	0e 94 ca 00 	call	0x194	; 0x194 <halfbytecommand>
     282:	8d e6       	ldi	r24, 0x6D	; 109
     284:	8a 95       	dec	r24
     286:	f1 f7       	brne	.-4      	; 0x284 <LCD_ini+0x3a>
     288:	00 00       	nop
	_delay_us(41);
	halfbytecommand(0b00110000);
     28a:	80 e3       	ldi	r24, 0x30	; 48
     28c:	90 e0       	ldi	r25, 0x00	; 0
     28e:	0e 94 ca 00 	call	0x194	; 0x194 <halfbytecommand>
     292:	9d e6       	ldi	r25, 0x6D	; 109
     294:	9a 95       	dec	r25
     296:	f1 f7       	brne	.-4      	; 0x294 <LCD_ini+0x4a>
     298:	00 00       	nop
	_delay_us(41);
	halfbytecommand(0b00100000);
     29a:	80 e2       	ldi	r24, 0x20	; 32
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	0e 94 ca 00 	call	0x194	; 0x194 <halfbytecommand>
     2a2:	8d e6       	ldi	r24, 0x6D	; 109
     2a4:	8a 95       	dec	r24
     2a6:	f1 f7       	brne	.-4      	; 0x2a4 <LCD_ini+0x5a>
     2a8:	00 00       	nop
	_delay_us(41);
	//Настройки дисплея
	sendbyte_to_LCD(0b00101000,0);//Установка 4-битной передачи данных и 1-й табл знакогенер
     2aa:	60 e0       	ldi	r22, 0x00	; 0
     2ac:	88 e2       	ldi	r24, 0x28	; 40
     2ae:	0e 94 e7 00 	call	0x1ce	; 0x1ce <sendbyte_to_LCD>
     2b2:	92 e0       	ldi	r25, 0x02	; 2
     2b4:	9a 95       	dec	r25
     2b6:	f1 f7       	brne	.-4      	; 0x2b4 <LCD_ini+0x6a>
     2b8:	00 c0       	rjmp	.+0      	; 0x2ba <LCD_ini+0x70>
	_delay_us(1);
	sendbyte_to_LCD(0b00001100,0);//Дисплей включить. курсора нет
     2ba:	60 e0       	ldi	r22, 0x00	; 0
     2bc:	8c e0       	ldi	r24, 0x0C	; 12
     2be:	0e 94 e7 00 	call	0x1ce	; 0x1ce <sendbyte_to_LCD>
     2c2:	82 e0       	ldi	r24, 0x02	; 2
     2c4:	8a 95       	dec	r24
     2c6:	f1 f7       	brne	.-4      	; 0x2c4 <LCD_ini+0x7a>
     2c8:	00 c0       	rjmp	.+0      	; 0x2ca <LCD_ini+0x80>
     2ca:	08 95       	ret

000002cc <setpos_to_LCD>:
}
//Установка курсора в указанную позицию
void setpos_to_LCD(unsigned char X, unsigned char Y)
{
	char adress;
	adress=(0x40*Y+X)|0b10000000;
     2cc:	90 e4       	ldi	r25, 0x40	; 64
     2ce:	69 9f       	mul	r22, r25
     2d0:	80 0d       	add	r24, r0
     2d2:	11 24       	eor	r1, r1
	sendbyte_to_LCD(adress,0);
     2d4:	60 e0       	ldi	r22, 0x00	; 0
     2d6:	80 68       	ori	r24, 0x80	; 128
     2d8:	0e 94 e7 00 	call	0x1ce	; 0x1ce <sendbyte_to_LCD>
     2dc:	08 95       	ret

000002de <string_to_LCD>:
}
//Вывод строки на дисплей
void string_to_LCD(char str1[])
{
     2de:	0f 93       	push	r16
     2e0:	1f 93       	push	r17
     2e2:	cf 93       	push	r28
     2e4:	df 93       	push	r29
     2e6:	8c 01       	movw	r16, r24
	wchar_t n;//Символьный тип данных
	for(n=0; str1[n]!='\0';n++)sendbyte_to_LCD(str1[n],1);//Отправлять все символы из
     2e8:	c0 e0       	ldi	r28, 0x00	; 0
     2ea:	d0 e0       	ldi	r29, 0x00	; 0
     2ec:	04 c0       	rjmp	.+8      	; 0x2f6 <string_to_LCD+0x18>
     2ee:	61 e0       	ldi	r22, 0x01	; 1
     2f0:	0e 94 e7 00 	call	0x1ce	; 0x1ce <sendbyte_to_LCD>
     2f4:	21 96       	adiw	r28, 0x01	; 1
     2f6:	f8 01       	movw	r30, r16
     2f8:	ec 0f       	add	r30, r28
     2fa:	fd 1f       	adc	r31, r29
     2fc:	80 81       	ld	r24, Z
     2fe:	81 11       	cpse	r24, r1
     300:	f6 cf       	rjmp	.-20     	; 0x2ee <string_to_LCD+0x10>
	//массива str1[] по очереди, пока символы в нем не закончатся str1[n]!='\0'
}
     302:	df 91       	pop	r29
     304:	cf 91       	pop	r28
     306:	1f 91       	pop	r17
     308:	0f 91       	pop	r16
     30a:	08 95       	ret

0000030c <ADC_ini>:
// Массив для вывода результата на дисплей
char str[16];

// Инициализация АЦП
void ADC_ini(void) {
	ADCSRA |= (1 << ADEN); // Включение АЦП
     30c:	86 b1       	in	r24, 0x06	; 6
     30e:	80 68       	ori	r24, 0x80	; 128
     310:	86 b9       	out	0x06, r24	; 6
	// частота АЦП = 1/64 проц. частоты
	ADCSRA |= (1 << ADPS2) | (1 << ADPS1);
     312:	86 b1       	in	r24, 0x06	; 6
     314:	86 60       	ori	r24, 0x06	; 6
     316:	86 b9       	out	0x06, r24	; 6
	// Опорное напряжение берется от AVcc
	ADMUX |= (1 << REFS0);
     318:	87 b1       	in	r24, 0x07	; 7
     31a:	80 64       	ori	r24, 0x40	; 64
     31c:	87 b9       	out	0x07, r24	; 7
	// Выбираем режим АЦП с дифференциальными входами
	// ADC1 (PA1) - "+", ADC0 (PA0) - "-" без усиления
	ADMUX |= (1 << MUX0) | (1 << MUX2) | (1 << MUX3);
     31e:	87 b1       	in	r24, 0x07	; 7
     320:	8d 60       	ori	r24, 0x0D	; 13
     322:	87 b9       	out	0x07, r24	; 7
	ADMUX &=~ (1 << MUX1) &~ (1 << MUX4);
     324:	87 b1       	in	r24, 0x07	; 7
     326:	8d 7e       	andi	r24, 0xED	; 237
     328:	87 b9       	out	0x07, r24	; 7
	// Выравнивание записи результата преобразования влево
	ADMUX |= (1 << ADLAR);
     32a:	87 b1       	in	r24, 0x07	; 7
     32c:	80 62       	ori	r24, 0x20	; 32
     32e:	87 b9       	out	0x07, r24	; 7
     330:	08 95       	ret

00000332 <ADCconvert>:
}

// Функция преобразования АЦП
void ADCconvert(void) {
	// Запуск одиночного преобразования
	ADCSRA |= (1 << ADSC);
     332:	86 b1       	in	r24, 0x06	; 6
     334:	80 64       	ori	r24, 0x40	; 64
     336:	86 b9       	out	0x06, r24	; 6
	// Подождать, пока не завершится преобразование
	while (ADCSRA & (1 << ADSC));
     338:	36 99       	sbic	0x06, 6	; 6
     33a:	fe cf       	rjmp	.-4      	; 0x338 <ADCconvert+0x6>
	// Запись в переменную содержимого регистра ADC
	cod = ADCH;
     33c:	65 b1       	in	r22, 0x05	; 5
     33e:	70 e0       	ldi	r23, 0x00	; 0
     340:	80 e0       	ldi	r24, 0x00	; 0
     342:	90 e0       	ldi	r25, 0x00	; 0
     344:	0e 94 31 02 	call	0x462	; 0x462 <__floatunsisf>
     348:	60 93 84 00 	sts	0x0084, r22	; 0x800084 <cod>
     34c:	70 93 85 00 	sts	0x0085, r23	; 0x800085 <cod+0x1>
     350:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <cod+0x2>
     354:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <cod+0x3>
     358:	08 95       	ret

0000035a <main>:
}

int main(void) {
	// Инициализация дисплея и встроенного АЦП
	LCD_ini();
     35a:	0e 94 25 01 	call	0x24a	; 0x24a <LCD_ini>
	ADC_ini();
     35e:	0e 94 86 01 	call	0x30c	; 0x30c <ADC_ini>

	while (1) {
		// Запустить преобразование
		ADCconvert();
     362:	0e 94 99 01 	call	0x332	; 0x332 <ADCconvert>
		// Преобразование кода в напряжение
		voltage = (cod / 256.0) * 5.0; // AVcc = 5V
     366:	20 e0       	ldi	r18, 0x00	; 0
     368:	30 e0       	ldi	r19, 0x00	; 0
     36a:	40 e8       	ldi	r20, 0x80	; 128
     36c:	5b e3       	ldi	r21, 0x3B	; 59
     36e:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <cod>
     372:	70 91 85 00 	lds	r23, 0x0085	; 0x800085 <cod+0x1>
     376:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <cod+0x2>
     37a:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <cod+0x3>
     37e:	0e 94 6e 02 	call	0x4dc	; 0x4dc <__mulsf3>
     382:	20 e0       	ldi	r18, 0x00	; 0
     384:	30 e0       	ldi	r19, 0x00	; 0
     386:	40 ea       	ldi	r20, 0xA0	; 160
     388:	50 e4       	ldi	r21, 0x40	; 64
     38a:	0e 94 6e 02 	call	0x4dc	; 0x4dc <__mulsf3>
     38e:	60 93 7c 00 	sts	0x007C, r22	; 0x80007c <__data_end>
     392:	70 93 7d 00 	sts	0x007D, r23	; 0x80007d <__data_end+0x1>
     396:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__data_end+0x2>
     39a:	90 93 7f 00 	sts	0x007F, r25	; 0x80007f <__data_end+0x3>
		// Преобразование напряжения в ток (например, если шунт 0.1 Ом)
		current = voltage ; // Шунт = 0.1 Ом
     39e:	60 93 80 00 	sts	0x0080, r22	; 0x800080 <current>
     3a2:	70 93 81 00 	sts	0x0081, r23	; 0x800081 <current+0x1>
     3a6:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <current+0x2>
     3aa:	90 93 83 00 	sts	0x0083, r25	; 0x800083 <current+0x3>

		// Вывод значений на дисплей
		setpos_to_LCD(0, 0);
     3ae:	60 e0       	ldi	r22, 0x00	; 0
     3b0:	80 e0       	ldi	r24, 0x00	; 0
     3b2:	0e 94 66 01 	call	0x2cc	; 0x2cc <setpos_to_LCD>
		sprintf(str, "Code=%.0f", cod);
     3b6:	80 91 87 00 	lds	r24, 0x0087	; 0x800087 <cod+0x3>
     3ba:	8f 93       	push	r24
     3bc:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <cod+0x2>
     3c0:	8f 93       	push	r24
     3c2:	80 91 85 00 	lds	r24, 0x0085	; 0x800085 <cod+0x1>
     3c6:	8f 93       	push	r24
     3c8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <cod>
     3cc:	8f 93       	push	r24
     3ce:	80 e6       	ldi	r24, 0x60	; 96
     3d0:	90 e0       	ldi	r25, 0x00	; 0
     3d2:	9f 93       	push	r25
     3d4:	8f 93       	push	r24
     3d6:	c8 e8       	ldi	r28, 0x88	; 136
     3d8:	d0 e0       	ldi	r29, 0x00	; 0
     3da:	df 93       	push	r29
     3dc:	cf 93       	push	r28
     3de:	0e 94 0a 08 	call	0x1014	; 0x1014 <sprintf>
		string_to_LCD(" ");
     3e2:	8a e6       	ldi	r24, 0x6A	; 106
     3e4:	90 e0       	ldi	r25, 0x00	; 0
     3e6:	0e 94 6f 01 	call	0x2de	; 0x2de <string_to_LCD>
		string_to_LCD(str);
     3ea:	ce 01       	movw	r24, r28
     3ec:	0e 94 6f 01 	call	0x2de	; 0x2de <string_to_LCD>
		setpos_to_LCD(0, 1);
     3f0:	61 e0       	ldi	r22, 0x01	; 1
     3f2:	80 e0       	ldi	r24, 0x00	; 0
     3f4:	0e 94 66 01 	call	0x2cc	; 0x2cc <setpos_to_LCD>
		sprintf(str, "V=%.2fV I=%.2fA", voltage, current);
     3f8:	80 91 83 00 	lds	r24, 0x0083	; 0x800083 <current+0x3>
     3fc:	8f 93       	push	r24
     3fe:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <current+0x2>
     402:	8f 93       	push	r24
     404:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <current+0x1>
     408:	8f 93       	push	r24
     40a:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <current>
     40e:	8f 93       	push	r24
     410:	80 91 7f 00 	lds	r24, 0x007F	; 0x80007f <__data_end+0x3>
     414:	8f 93       	push	r24
     416:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <__data_end+0x2>
     41a:	8f 93       	push	r24
     41c:	80 91 7d 00 	lds	r24, 0x007D	; 0x80007d <__data_end+0x1>
     420:	8f 93       	push	r24
     422:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__data_end>
     426:	8f 93       	push	r24
     428:	8c e6       	ldi	r24, 0x6C	; 108
     42a:	90 e0       	ldi	r25, 0x00	; 0
     42c:	9f 93       	push	r25
     42e:	8f 93       	push	r24
     430:	df 93       	push	r29
     432:	cf 93       	push	r28
     434:	0e 94 0a 08 	call	0x1014	; 0x1014 <sprintf>
		string_to_LCD(str);
     438:	ce 01       	movw	r24, r28
     43a:	0e 94 6f 01 	call	0x2de	; 0x2de <string_to_LCD>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     43e:	8f ef       	ldi	r24, 0xFF	; 255
     440:	99 e6       	ldi	r25, 0x69	; 105
     442:	28 e1       	ldi	r18, 0x18	; 24
     444:	81 50       	subi	r24, 0x01	; 1
     446:	90 40       	sbci	r25, 0x00	; 0
     448:	20 40       	sbci	r18, 0x00	; 0
     44a:	e1 f7       	brne	.-8      	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
     44c:	00 c0       	rjmp	.+0      	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
     44e:	00 00       	nop
     450:	8d b7       	in	r24, 0x3d	; 61
     452:	9e b7       	in	r25, 0x3e	; 62
     454:	44 96       	adiw	r24, 0x14	; 20
     456:	0f b6       	in	r0, 0x3f	; 63
     458:	f8 94       	cli
     45a:	9e bf       	out	0x3e, r25	; 62
     45c:	0f be       	out	0x3f, r0	; 63
     45e:	8d bf       	out	0x3d, r24	; 61
     460:	80 cf       	rjmp	.-256    	; 0x362 <main+0x8>

00000462 <__floatunsisf>:
     462:	e8 94       	clt
     464:	09 c0       	rjmp	.+18     	; 0x478 <__floatsisf+0x12>

00000466 <__floatsisf>:
     466:	97 fb       	bst	r25, 7
     468:	3e f4       	brtc	.+14     	; 0x478 <__floatsisf+0x12>
     46a:	90 95       	com	r25
     46c:	80 95       	com	r24
     46e:	70 95       	com	r23
     470:	61 95       	neg	r22
     472:	7f 4f       	sbci	r23, 0xFF	; 255
     474:	8f 4f       	sbci	r24, 0xFF	; 255
     476:	9f 4f       	sbci	r25, 0xFF	; 255
     478:	99 23       	and	r25, r25
     47a:	a9 f0       	breq	.+42     	; 0x4a6 <__floatsisf+0x40>
     47c:	f9 2f       	mov	r31, r25
     47e:	96 e9       	ldi	r25, 0x96	; 150
     480:	bb 27       	eor	r27, r27
     482:	93 95       	inc	r25
     484:	f6 95       	lsr	r31
     486:	87 95       	ror	r24
     488:	77 95       	ror	r23
     48a:	67 95       	ror	r22
     48c:	b7 95       	ror	r27
     48e:	f1 11       	cpse	r31, r1
     490:	f8 cf       	rjmp	.-16     	; 0x482 <__floatsisf+0x1c>
     492:	fa f4       	brpl	.+62     	; 0x4d2 <__floatsisf+0x6c>
     494:	bb 0f       	add	r27, r27
     496:	11 f4       	brne	.+4      	; 0x49c <__floatsisf+0x36>
     498:	60 ff       	sbrs	r22, 0
     49a:	1b c0       	rjmp	.+54     	; 0x4d2 <__floatsisf+0x6c>
     49c:	6f 5f       	subi	r22, 0xFF	; 255
     49e:	7f 4f       	sbci	r23, 0xFF	; 255
     4a0:	8f 4f       	sbci	r24, 0xFF	; 255
     4a2:	9f 4f       	sbci	r25, 0xFF	; 255
     4a4:	16 c0       	rjmp	.+44     	; 0x4d2 <__floatsisf+0x6c>
     4a6:	88 23       	and	r24, r24
     4a8:	11 f0       	breq	.+4      	; 0x4ae <__floatsisf+0x48>
     4aa:	96 e9       	ldi	r25, 0x96	; 150
     4ac:	11 c0       	rjmp	.+34     	; 0x4d0 <__floatsisf+0x6a>
     4ae:	77 23       	and	r23, r23
     4b0:	21 f0       	breq	.+8      	; 0x4ba <__floatsisf+0x54>
     4b2:	9e e8       	ldi	r25, 0x8E	; 142
     4b4:	87 2f       	mov	r24, r23
     4b6:	76 2f       	mov	r23, r22
     4b8:	05 c0       	rjmp	.+10     	; 0x4c4 <__floatsisf+0x5e>
     4ba:	66 23       	and	r22, r22
     4bc:	71 f0       	breq	.+28     	; 0x4da <__floatsisf+0x74>
     4be:	96 e8       	ldi	r25, 0x86	; 134
     4c0:	86 2f       	mov	r24, r22
     4c2:	70 e0       	ldi	r23, 0x00	; 0
     4c4:	60 e0       	ldi	r22, 0x00	; 0
     4c6:	2a f0       	brmi	.+10     	; 0x4d2 <__floatsisf+0x6c>
     4c8:	9a 95       	dec	r25
     4ca:	66 0f       	add	r22, r22
     4cc:	77 1f       	adc	r23, r23
     4ce:	88 1f       	adc	r24, r24
     4d0:	da f7       	brpl	.-10     	; 0x4c8 <__floatsisf+0x62>
     4d2:	88 0f       	add	r24, r24
     4d4:	96 95       	lsr	r25
     4d6:	87 95       	ror	r24
     4d8:	97 f9       	bld	r25, 7
     4da:	08 95       	ret

000004dc <__mulsf3>:
     4dc:	0e 94 81 02 	call	0x502	; 0x502 <__mulsf3x>
     4e0:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__fp_round>
     4e4:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <__fp_pscA>
     4e8:	38 f0       	brcs	.+14     	; 0x4f8 <__mulsf3+0x1c>
     4ea:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <__fp_pscB>
     4ee:	20 f0       	brcs	.+8      	; 0x4f8 <__mulsf3+0x1c>
     4f0:	95 23       	and	r25, r21
     4f2:	11 f0       	breq	.+4      	; 0x4f8 <__mulsf3+0x1c>
     4f4:	0c 94 db 02 	jmp	0x5b6	; 0x5b6 <__fp_inf>
     4f8:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__fp_nan>
     4fc:	11 24       	eor	r1, r1
     4fe:	0c 94 26 03 	jmp	0x64c	; 0x64c <__fp_szero>

00000502 <__mulsf3x>:
     502:	0e 94 03 03 	call	0x606	; 0x606 <__fp_split3>
     506:	70 f3       	brcs	.-36     	; 0x4e4 <__mulsf3+0x8>

00000508 <__mulsf3_pse>:
     508:	95 9f       	mul	r25, r21
     50a:	c1 f3       	breq	.-16     	; 0x4fc <__mulsf3+0x20>
     50c:	95 0f       	add	r25, r21
     50e:	50 e0       	ldi	r21, 0x00	; 0
     510:	55 1f       	adc	r21, r21
     512:	62 9f       	mul	r22, r18
     514:	f0 01       	movw	r30, r0
     516:	72 9f       	mul	r23, r18
     518:	bb 27       	eor	r27, r27
     51a:	f0 0d       	add	r31, r0
     51c:	b1 1d       	adc	r27, r1
     51e:	63 9f       	mul	r22, r19
     520:	aa 27       	eor	r26, r26
     522:	f0 0d       	add	r31, r0
     524:	b1 1d       	adc	r27, r1
     526:	aa 1f       	adc	r26, r26
     528:	64 9f       	mul	r22, r20
     52a:	66 27       	eor	r22, r22
     52c:	b0 0d       	add	r27, r0
     52e:	a1 1d       	adc	r26, r1
     530:	66 1f       	adc	r22, r22
     532:	82 9f       	mul	r24, r18
     534:	22 27       	eor	r18, r18
     536:	b0 0d       	add	r27, r0
     538:	a1 1d       	adc	r26, r1
     53a:	62 1f       	adc	r22, r18
     53c:	73 9f       	mul	r23, r19
     53e:	b0 0d       	add	r27, r0
     540:	a1 1d       	adc	r26, r1
     542:	62 1f       	adc	r22, r18
     544:	83 9f       	mul	r24, r19
     546:	a0 0d       	add	r26, r0
     548:	61 1d       	adc	r22, r1
     54a:	22 1f       	adc	r18, r18
     54c:	74 9f       	mul	r23, r20
     54e:	33 27       	eor	r19, r19
     550:	a0 0d       	add	r26, r0
     552:	61 1d       	adc	r22, r1
     554:	23 1f       	adc	r18, r19
     556:	84 9f       	mul	r24, r20
     558:	60 0d       	add	r22, r0
     55a:	21 1d       	adc	r18, r1
     55c:	82 2f       	mov	r24, r18
     55e:	76 2f       	mov	r23, r22
     560:	6a 2f       	mov	r22, r26
     562:	11 24       	eor	r1, r1
     564:	9f 57       	subi	r25, 0x7F	; 127
     566:	50 40       	sbci	r21, 0x00	; 0
     568:	9a f0       	brmi	.+38     	; 0x590 <__mulsf3_pse+0x88>
     56a:	f1 f0       	breq	.+60     	; 0x5a8 <__mulsf3_pse+0xa0>
     56c:	88 23       	and	r24, r24
     56e:	4a f0       	brmi	.+18     	; 0x582 <__mulsf3_pse+0x7a>
     570:	ee 0f       	add	r30, r30
     572:	ff 1f       	adc	r31, r31
     574:	bb 1f       	adc	r27, r27
     576:	66 1f       	adc	r22, r22
     578:	77 1f       	adc	r23, r23
     57a:	88 1f       	adc	r24, r24
     57c:	91 50       	subi	r25, 0x01	; 1
     57e:	50 40       	sbci	r21, 0x00	; 0
     580:	a9 f7       	brne	.-22     	; 0x56c <__mulsf3_pse+0x64>
     582:	9e 3f       	cpi	r25, 0xFE	; 254
     584:	51 05       	cpc	r21, r1
     586:	80 f0       	brcs	.+32     	; 0x5a8 <__mulsf3_pse+0xa0>
     588:	0c 94 db 02 	jmp	0x5b6	; 0x5b6 <__fp_inf>
     58c:	0c 94 26 03 	jmp	0x64c	; 0x64c <__fp_szero>
     590:	5f 3f       	cpi	r21, 0xFF	; 255
     592:	e4 f3       	brlt	.-8      	; 0x58c <__mulsf3_pse+0x84>
     594:	98 3e       	cpi	r25, 0xE8	; 232
     596:	d4 f3       	brlt	.-12     	; 0x58c <__mulsf3_pse+0x84>
     598:	86 95       	lsr	r24
     59a:	77 95       	ror	r23
     59c:	67 95       	ror	r22
     59e:	b7 95       	ror	r27
     5a0:	f7 95       	ror	r31
     5a2:	e7 95       	ror	r30
     5a4:	9f 5f       	subi	r25, 0xFF	; 255
     5a6:	c1 f7       	brne	.-16     	; 0x598 <__mulsf3_pse+0x90>
     5a8:	fe 2b       	or	r31, r30
     5aa:	88 0f       	add	r24, r24
     5ac:	91 1d       	adc	r25, r1
     5ae:	96 95       	lsr	r25
     5b0:	87 95       	ror	r24
     5b2:	97 f9       	bld	r25, 7
     5b4:	08 95       	ret

000005b6 <__fp_inf>:
     5b6:	97 f9       	bld	r25, 7
     5b8:	9f 67       	ori	r25, 0x7F	; 127
     5ba:	80 e8       	ldi	r24, 0x80	; 128
     5bc:	70 e0       	ldi	r23, 0x00	; 0
     5be:	60 e0       	ldi	r22, 0x00	; 0
     5c0:	08 95       	ret

000005c2 <__fp_nan>:
     5c2:	9f ef       	ldi	r25, 0xFF	; 255
     5c4:	80 ec       	ldi	r24, 0xC0	; 192
     5c6:	08 95       	ret

000005c8 <__fp_pscA>:
     5c8:	00 24       	eor	r0, r0
     5ca:	0a 94       	dec	r0
     5cc:	16 16       	cp	r1, r22
     5ce:	17 06       	cpc	r1, r23
     5d0:	18 06       	cpc	r1, r24
     5d2:	09 06       	cpc	r0, r25
     5d4:	08 95       	ret

000005d6 <__fp_pscB>:
     5d6:	00 24       	eor	r0, r0
     5d8:	0a 94       	dec	r0
     5da:	12 16       	cp	r1, r18
     5dc:	13 06       	cpc	r1, r19
     5de:	14 06       	cpc	r1, r20
     5e0:	05 06       	cpc	r0, r21
     5e2:	08 95       	ret

000005e4 <__fp_round>:
     5e4:	09 2e       	mov	r0, r25
     5e6:	03 94       	inc	r0
     5e8:	00 0c       	add	r0, r0
     5ea:	11 f4       	brne	.+4      	; 0x5f0 <__fp_round+0xc>
     5ec:	88 23       	and	r24, r24
     5ee:	52 f0       	brmi	.+20     	; 0x604 <__fp_round+0x20>
     5f0:	bb 0f       	add	r27, r27
     5f2:	40 f4       	brcc	.+16     	; 0x604 <__fp_round+0x20>
     5f4:	bf 2b       	or	r27, r31
     5f6:	11 f4       	brne	.+4      	; 0x5fc <__fp_round+0x18>
     5f8:	60 ff       	sbrs	r22, 0
     5fa:	04 c0       	rjmp	.+8      	; 0x604 <__fp_round+0x20>
     5fc:	6f 5f       	subi	r22, 0xFF	; 255
     5fe:	7f 4f       	sbci	r23, 0xFF	; 255
     600:	8f 4f       	sbci	r24, 0xFF	; 255
     602:	9f 4f       	sbci	r25, 0xFF	; 255
     604:	08 95       	ret

00000606 <__fp_split3>:
     606:	57 fd       	sbrc	r21, 7
     608:	90 58       	subi	r25, 0x80	; 128
     60a:	44 0f       	add	r20, r20
     60c:	55 1f       	adc	r21, r21
     60e:	59 f0       	breq	.+22     	; 0x626 <__fp_splitA+0x10>
     610:	5f 3f       	cpi	r21, 0xFF	; 255
     612:	71 f0       	breq	.+28     	; 0x630 <__fp_splitA+0x1a>
     614:	47 95       	ror	r20

00000616 <__fp_splitA>:
     616:	88 0f       	add	r24, r24
     618:	97 fb       	bst	r25, 7
     61a:	99 1f       	adc	r25, r25
     61c:	61 f0       	breq	.+24     	; 0x636 <__fp_splitA+0x20>
     61e:	9f 3f       	cpi	r25, 0xFF	; 255
     620:	79 f0       	breq	.+30     	; 0x640 <__fp_splitA+0x2a>
     622:	87 95       	ror	r24
     624:	08 95       	ret
     626:	12 16       	cp	r1, r18
     628:	13 06       	cpc	r1, r19
     62a:	14 06       	cpc	r1, r20
     62c:	55 1f       	adc	r21, r21
     62e:	f2 cf       	rjmp	.-28     	; 0x614 <__fp_split3+0xe>
     630:	46 95       	lsr	r20
     632:	f1 df       	rcall	.-30     	; 0x616 <__fp_splitA>
     634:	08 c0       	rjmp	.+16     	; 0x646 <__fp_splitA+0x30>
     636:	16 16       	cp	r1, r22
     638:	17 06       	cpc	r1, r23
     63a:	18 06       	cpc	r1, r24
     63c:	99 1f       	adc	r25, r25
     63e:	f1 cf       	rjmp	.-30     	; 0x622 <__fp_splitA+0xc>
     640:	86 95       	lsr	r24
     642:	71 05       	cpc	r23, r1
     644:	61 05       	cpc	r22, r1
     646:	08 94       	sec
     648:	08 95       	ret

0000064a <__fp_zero>:
     64a:	e8 94       	clt

0000064c <__fp_szero>:
     64c:	bb 27       	eor	r27, r27
     64e:	66 27       	eor	r22, r22
     650:	77 27       	eor	r23, r23
     652:	cb 01       	movw	r24, r22
     654:	97 f9       	bld	r25, 7
     656:	08 95       	ret

00000658 <vfprintf>:
     658:	a0 e1       	ldi	r26, 0x10	; 16
     65a:	b0 e0       	ldi	r27, 0x00	; 0
     65c:	e2 e3       	ldi	r30, 0x32	; 50
     65e:	f3 e0       	ldi	r31, 0x03	; 3
     660:	0c 94 a9 06 	jmp	0xd52	; 0xd52 <__prologue_saves__>
     664:	7c 01       	movw	r14, r24
     666:	1b 01       	movw	r2, r22
     668:	6a 01       	movw	r12, r20
     66a:	fc 01       	movw	r30, r24
     66c:	17 82       	std	Z+7, r1	; 0x07
     66e:	16 82       	std	Z+6, r1	; 0x06
     670:	83 81       	ldd	r24, Z+3	; 0x03
     672:	81 ff       	sbrs	r24, 1
     674:	44 c3       	rjmp	.+1672   	; 0xcfe <__stack+0x49f>
     676:	9e 01       	movw	r18, r28
     678:	2f 5f       	subi	r18, 0xFF	; 255
     67a:	3f 4f       	sbci	r19, 0xFF	; 255
     67c:	39 01       	movw	r6, r18
     67e:	f7 01       	movw	r30, r14
     680:	93 81       	ldd	r25, Z+3	; 0x03
     682:	f1 01       	movw	r30, r2
     684:	93 fd       	sbrc	r25, 3
     686:	85 91       	lpm	r24, Z+
     688:	93 ff       	sbrs	r25, 3
     68a:	81 91       	ld	r24, Z+
     68c:	1f 01       	movw	r2, r30
     68e:	88 23       	and	r24, r24
     690:	09 f4       	brne	.+2      	; 0x694 <vfprintf+0x3c>
     692:	31 c3       	rjmp	.+1634   	; 0xcf6 <__stack+0x497>
     694:	85 32       	cpi	r24, 0x25	; 37
     696:	39 f4       	brne	.+14     	; 0x6a6 <vfprintf+0x4e>
     698:	93 fd       	sbrc	r25, 3
     69a:	85 91       	lpm	r24, Z+
     69c:	93 ff       	sbrs	r25, 3
     69e:	81 91       	ld	r24, Z+
     6a0:	1f 01       	movw	r2, r30
     6a2:	85 32       	cpi	r24, 0x25	; 37
     6a4:	39 f4       	brne	.+14     	; 0x6b4 <vfprintf+0x5c>
     6a6:	b7 01       	movw	r22, r14
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     6ae:	56 01       	movw	r10, r12
     6b0:	65 01       	movw	r12, r10
     6b2:	e5 cf       	rjmp	.-54     	; 0x67e <vfprintf+0x26>
     6b4:	10 e0       	ldi	r17, 0x00	; 0
     6b6:	51 2c       	mov	r5, r1
     6b8:	91 2c       	mov	r9, r1
     6ba:	ff e1       	ldi	r31, 0x1F	; 31
     6bc:	f9 15       	cp	r31, r9
     6be:	d8 f0       	brcs	.+54     	; 0x6f6 <vfprintf+0x9e>
     6c0:	8b 32       	cpi	r24, 0x2B	; 43
     6c2:	79 f0       	breq	.+30     	; 0x6e2 <vfprintf+0x8a>
     6c4:	38 f4       	brcc	.+14     	; 0x6d4 <vfprintf+0x7c>
     6c6:	80 32       	cpi	r24, 0x20	; 32
     6c8:	79 f0       	breq	.+30     	; 0x6e8 <vfprintf+0x90>
     6ca:	83 32       	cpi	r24, 0x23	; 35
     6cc:	a1 f4       	brne	.+40     	; 0x6f6 <vfprintf+0x9e>
     6ce:	f9 2d       	mov	r31, r9
     6d0:	f0 61       	ori	r31, 0x10	; 16
     6d2:	2e c0       	rjmp	.+92     	; 0x730 <vfprintf+0xd8>
     6d4:	8d 32       	cpi	r24, 0x2D	; 45
     6d6:	61 f0       	breq	.+24     	; 0x6f0 <vfprintf+0x98>
     6d8:	80 33       	cpi	r24, 0x30	; 48
     6da:	69 f4       	brne	.+26     	; 0x6f6 <vfprintf+0x9e>
     6dc:	29 2d       	mov	r18, r9
     6de:	21 60       	ori	r18, 0x01	; 1
     6e0:	2d c0       	rjmp	.+90     	; 0x73c <vfprintf+0xe4>
     6e2:	39 2d       	mov	r19, r9
     6e4:	32 60       	ori	r19, 0x02	; 2
     6e6:	93 2e       	mov	r9, r19
     6e8:	89 2d       	mov	r24, r9
     6ea:	84 60       	ori	r24, 0x04	; 4
     6ec:	98 2e       	mov	r9, r24
     6ee:	2a c0       	rjmp	.+84     	; 0x744 <vfprintf+0xec>
     6f0:	e9 2d       	mov	r30, r9
     6f2:	e8 60       	ori	r30, 0x08	; 8
     6f4:	15 c0       	rjmp	.+42     	; 0x720 <vfprintf+0xc8>
     6f6:	97 fc       	sbrc	r9, 7
     6f8:	2d c0       	rjmp	.+90     	; 0x754 <vfprintf+0xfc>
     6fa:	20 ed       	ldi	r18, 0xD0	; 208
     6fc:	28 0f       	add	r18, r24
     6fe:	2a 30       	cpi	r18, 0x0A	; 10
     700:	88 f4       	brcc	.+34     	; 0x724 <vfprintf+0xcc>
     702:	96 fe       	sbrs	r9, 6
     704:	06 c0       	rjmp	.+12     	; 0x712 <vfprintf+0xba>
     706:	3a e0       	ldi	r19, 0x0A	; 10
     708:	13 9f       	mul	r17, r19
     70a:	20 0d       	add	r18, r0
     70c:	11 24       	eor	r1, r1
     70e:	12 2f       	mov	r17, r18
     710:	19 c0       	rjmp	.+50     	; 0x744 <vfprintf+0xec>
     712:	8a e0       	ldi	r24, 0x0A	; 10
     714:	58 9e       	mul	r5, r24
     716:	20 0d       	add	r18, r0
     718:	11 24       	eor	r1, r1
     71a:	52 2e       	mov	r5, r18
     71c:	e9 2d       	mov	r30, r9
     71e:	e0 62       	ori	r30, 0x20	; 32
     720:	9e 2e       	mov	r9, r30
     722:	10 c0       	rjmp	.+32     	; 0x744 <vfprintf+0xec>
     724:	8e 32       	cpi	r24, 0x2E	; 46
     726:	31 f4       	brne	.+12     	; 0x734 <vfprintf+0xdc>
     728:	96 fc       	sbrc	r9, 6
     72a:	e5 c2       	rjmp	.+1482   	; 0xcf6 <__stack+0x497>
     72c:	f9 2d       	mov	r31, r9
     72e:	f0 64       	ori	r31, 0x40	; 64
     730:	9f 2e       	mov	r9, r31
     732:	08 c0       	rjmp	.+16     	; 0x744 <vfprintf+0xec>
     734:	8c 36       	cpi	r24, 0x6C	; 108
     736:	21 f4       	brne	.+8      	; 0x740 <vfprintf+0xe8>
     738:	29 2d       	mov	r18, r9
     73a:	20 68       	ori	r18, 0x80	; 128
     73c:	92 2e       	mov	r9, r18
     73e:	02 c0       	rjmp	.+4      	; 0x744 <vfprintf+0xec>
     740:	88 36       	cpi	r24, 0x68	; 104
     742:	41 f4       	brne	.+16     	; 0x754 <vfprintf+0xfc>
     744:	f1 01       	movw	r30, r2
     746:	93 fd       	sbrc	r25, 3
     748:	85 91       	lpm	r24, Z+
     74a:	93 ff       	sbrs	r25, 3
     74c:	81 91       	ld	r24, Z+
     74e:	1f 01       	movw	r2, r30
     750:	81 11       	cpse	r24, r1
     752:	b3 cf       	rjmp	.-154    	; 0x6ba <vfprintf+0x62>
     754:	9b eb       	ldi	r25, 0xBB	; 187
     756:	98 0f       	add	r25, r24
     758:	93 30       	cpi	r25, 0x03	; 3
     75a:	20 f4       	brcc	.+8      	; 0x764 <vfprintf+0x10c>
     75c:	99 2d       	mov	r25, r9
     75e:	90 61       	ori	r25, 0x10	; 16
     760:	80 5e       	subi	r24, 0xE0	; 224
     762:	07 c0       	rjmp	.+14     	; 0x772 <vfprintf+0x11a>
     764:	9b e9       	ldi	r25, 0x9B	; 155
     766:	98 0f       	add	r25, r24
     768:	93 30       	cpi	r25, 0x03	; 3
     76a:	08 f0       	brcs	.+2      	; 0x76e <vfprintf+0x116>
     76c:	66 c1       	rjmp	.+716    	; 0xa3a <__stack+0x1db>
     76e:	99 2d       	mov	r25, r9
     770:	9f 7e       	andi	r25, 0xEF	; 239
     772:	96 ff       	sbrs	r25, 6
     774:	16 e0       	ldi	r17, 0x06	; 6
     776:	9f 73       	andi	r25, 0x3F	; 63
     778:	99 2e       	mov	r9, r25
     77a:	85 36       	cpi	r24, 0x65	; 101
     77c:	19 f4       	brne	.+6      	; 0x784 <vfprintf+0x12c>
     77e:	90 64       	ori	r25, 0x40	; 64
     780:	99 2e       	mov	r9, r25
     782:	08 c0       	rjmp	.+16     	; 0x794 <vfprintf+0x13c>
     784:	86 36       	cpi	r24, 0x66	; 102
     786:	21 f4       	brne	.+8      	; 0x790 <vfprintf+0x138>
     788:	39 2f       	mov	r19, r25
     78a:	30 68       	ori	r19, 0x80	; 128
     78c:	93 2e       	mov	r9, r19
     78e:	02 c0       	rjmp	.+4      	; 0x794 <vfprintf+0x13c>
     790:	11 11       	cpse	r17, r1
     792:	11 50       	subi	r17, 0x01	; 1
     794:	97 fe       	sbrs	r9, 7
     796:	07 c0       	rjmp	.+14     	; 0x7a6 <vfprintf+0x14e>
     798:	1c 33       	cpi	r17, 0x3C	; 60
     79a:	50 f4       	brcc	.+20     	; 0x7b0 <vfprintf+0x158>
     79c:	44 24       	eor	r4, r4
     79e:	43 94       	inc	r4
     7a0:	41 0e       	add	r4, r17
     7a2:	27 e0       	ldi	r18, 0x07	; 7
     7a4:	0b c0       	rjmp	.+22     	; 0x7bc <vfprintf+0x164>
     7a6:	18 30       	cpi	r17, 0x08	; 8
     7a8:	38 f0       	brcs	.+14     	; 0x7b8 <vfprintf+0x160>
     7aa:	27 e0       	ldi	r18, 0x07	; 7
     7ac:	17 e0       	ldi	r17, 0x07	; 7
     7ae:	05 c0       	rjmp	.+10     	; 0x7ba <vfprintf+0x162>
     7b0:	27 e0       	ldi	r18, 0x07	; 7
     7b2:	9c e3       	ldi	r25, 0x3C	; 60
     7b4:	49 2e       	mov	r4, r25
     7b6:	02 c0       	rjmp	.+4      	; 0x7bc <vfprintf+0x164>
     7b8:	21 2f       	mov	r18, r17
     7ba:	41 2c       	mov	r4, r1
     7bc:	56 01       	movw	r10, r12
     7be:	84 e0       	ldi	r24, 0x04	; 4
     7c0:	a8 0e       	add	r10, r24
     7c2:	b1 1c       	adc	r11, r1
     7c4:	f6 01       	movw	r30, r12
     7c6:	60 81       	ld	r22, Z
     7c8:	71 81       	ldd	r23, Z+1	; 0x01
     7ca:	82 81       	ldd	r24, Z+2	; 0x02
     7cc:	93 81       	ldd	r25, Z+3	; 0x03
     7ce:	04 2d       	mov	r16, r4
     7d0:	a3 01       	movw	r20, r6
     7d2:	0e 94 e0 06 	call	0xdc0	; 0xdc0 <__ftoa_engine>
     7d6:	6c 01       	movw	r12, r24
     7d8:	f9 81       	ldd	r31, Y+1	; 0x01
     7da:	fc 87       	std	Y+12, r31	; 0x0c
     7dc:	f0 ff       	sbrs	r31, 0
     7de:	02 c0       	rjmp	.+4      	; 0x7e4 <vfprintf+0x18c>
     7e0:	f3 ff       	sbrs	r31, 3
     7e2:	06 c0       	rjmp	.+12     	; 0x7f0 <vfprintf+0x198>
     7e4:	91 fc       	sbrc	r9, 1
     7e6:	06 c0       	rjmp	.+12     	; 0x7f4 <vfprintf+0x19c>
     7e8:	92 fe       	sbrs	r9, 2
     7ea:	06 c0       	rjmp	.+12     	; 0x7f8 <vfprintf+0x1a0>
     7ec:	00 e2       	ldi	r16, 0x20	; 32
     7ee:	05 c0       	rjmp	.+10     	; 0x7fa <vfprintf+0x1a2>
     7f0:	0d e2       	ldi	r16, 0x2D	; 45
     7f2:	03 c0       	rjmp	.+6      	; 0x7fa <vfprintf+0x1a2>
     7f4:	0b e2       	ldi	r16, 0x2B	; 43
     7f6:	01 c0       	rjmp	.+2      	; 0x7fa <vfprintf+0x1a2>
     7f8:	00 e0       	ldi	r16, 0x00	; 0
     7fa:	8c 85       	ldd	r24, Y+12	; 0x0c
     7fc:	8c 70       	andi	r24, 0x0C	; 12
     7fe:	19 f0       	breq	.+6      	; 0x806 <__DATA_REGION_LENGTH__+0x6>
     800:	01 11       	cpse	r16, r1
     802:	5a c2       	rjmp	.+1204   	; 0xcb8 <__stack+0x459>
     804:	9b c2       	rjmp	.+1334   	; 0xd3c <__stack+0x4dd>
     806:	97 fe       	sbrs	r9, 7
     808:	10 c0       	rjmp	.+32     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
     80a:	4c 0c       	add	r4, r12
     80c:	fc 85       	ldd	r31, Y+12	; 0x0c
     80e:	f4 ff       	sbrs	r31, 4
     810:	04 c0       	rjmp	.+8      	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
     812:	8a 81       	ldd	r24, Y+2	; 0x02
     814:	81 33       	cpi	r24, 0x31	; 49
     816:	09 f4       	brne	.+2      	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
     818:	4a 94       	dec	r4
     81a:	14 14       	cp	r1, r4
     81c:	74 f5       	brge	.+92     	; 0x87a <__stack+0x1b>
     81e:	28 e0       	ldi	r18, 0x08	; 8
     820:	24 15       	cp	r18, r4
     822:	78 f5       	brcc	.+94     	; 0x882 <__stack+0x23>
     824:	88 e0       	ldi	r24, 0x08	; 8
     826:	48 2e       	mov	r4, r24
     828:	2c c0       	rjmp	.+88     	; 0x882 <__stack+0x23>
     82a:	96 fc       	sbrc	r9, 6
     82c:	2a c0       	rjmp	.+84     	; 0x882 <__stack+0x23>
     82e:	81 2f       	mov	r24, r17
     830:	90 e0       	ldi	r25, 0x00	; 0
     832:	8c 15       	cp	r24, r12
     834:	9d 05       	cpc	r25, r13
     836:	9c f0       	brlt	.+38     	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
     838:	3c ef       	ldi	r19, 0xFC	; 252
     83a:	c3 16       	cp	r12, r19
     83c:	3f ef       	ldi	r19, 0xFF	; 255
     83e:	d3 06       	cpc	r13, r19
     840:	74 f0       	brlt	.+28     	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
     842:	89 2d       	mov	r24, r9
     844:	80 68       	ori	r24, 0x80	; 128
     846:	98 2e       	mov	r9, r24
     848:	0a c0       	rjmp	.+20     	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
     84a:	e2 e0       	ldi	r30, 0x02	; 2
     84c:	f0 e0       	ldi	r31, 0x00	; 0
     84e:	ec 0f       	add	r30, r28
     850:	fd 1f       	adc	r31, r29
     852:	e1 0f       	add	r30, r17
     854:	f1 1d       	adc	r31, r1
     856:	80 81       	ld	r24, Z
     858:	80 33       	cpi	r24, 0x30	; 48
     85a:	19 f4       	brne	.+6      	; 0x862 <__stack+0x3>
     85c:	11 50       	subi	r17, 0x01	; 1
     85e:	11 11       	cpse	r17, r1
     860:	f4 cf       	rjmp	.-24     	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
     862:	97 fe       	sbrs	r9, 7
     864:	0e c0       	rjmp	.+28     	; 0x882 <__stack+0x23>
     866:	44 24       	eor	r4, r4
     868:	43 94       	inc	r4
     86a:	41 0e       	add	r4, r17
     86c:	81 2f       	mov	r24, r17
     86e:	90 e0       	ldi	r25, 0x00	; 0
     870:	c8 16       	cp	r12, r24
     872:	d9 06       	cpc	r13, r25
     874:	2c f4       	brge	.+10     	; 0x880 <__stack+0x21>
     876:	1c 19       	sub	r17, r12
     878:	04 c0       	rjmp	.+8      	; 0x882 <__stack+0x23>
     87a:	44 24       	eor	r4, r4
     87c:	43 94       	inc	r4
     87e:	01 c0       	rjmp	.+2      	; 0x882 <__stack+0x23>
     880:	10 e0       	ldi	r17, 0x00	; 0
     882:	97 fe       	sbrs	r9, 7
     884:	06 c0       	rjmp	.+12     	; 0x892 <__stack+0x33>
     886:	1c 14       	cp	r1, r12
     888:	1d 04       	cpc	r1, r13
     88a:	34 f4       	brge	.+12     	; 0x898 <__stack+0x39>
     88c:	c6 01       	movw	r24, r12
     88e:	01 96       	adiw	r24, 0x01	; 1
     890:	05 c0       	rjmp	.+10     	; 0x89c <__stack+0x3d>
     892:	85 e0       	ldi	r24, 0x05	; 5
     894:	90 e0       	ldi	r25, 0x00	; 0
     896:	02 c0       	rjmp	.+4      	; 0x89c <__stack+0x3d>
     898:	81 e0       	ldi	r24, 0x01	; 1
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	01 11       	cpse	r16, r1
     89e:	01 96       	adiw	r24, 0x01	; 1
     8a0:	11 23       	and	r17, r17
     8a2:	31 f0       	breq	.+12     	; 0x8b0 <__stack+0x51>
     8a4:	21 2f       	mov	r18, r17
     8a6:	30 e0       	ldi	r19, 0x00	; 0
     8a8:	2f 5f       	subi	r18, 0xFF	; 255
     8aa:	3f 4f       	sbci	r19, 0xFF	; 255
     8ac:	82 0f       	add	r24, r18
     8ae:	93 1f       	adc	r25, r19
     8b0:	25 2d       	mov	r18, r5
     8b2:	30 e0       	ldi	r19, 0x00	; 0
     8b4:	82 17       	cp	r24, r18
     8b6:	93 07       	cpc	r25, r19
     8b8:	14 f4       	brge	.+4      	; 0x8be <__stack+0x5f>
     8ba:	58 1a       	sub	r5, r24
     8bc:	01 c0       	rjmp	.+2      	; 0x8c0 <__stack+0x61>
     8be:	51 2c       	mov	r5, r1
     8c0:	89 2d       	mov	r24, r9
     8c2:	89 70       	andi	r24, 0x09	; 9
     8c4:	49 f4       	brne	.+18     	; 0x8d8 <__stack+0x79>
     8c6:	55 20       	and	r5, r5
     8c8:	39 f0       	breq	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	b7 01       	movw	r22, r14
     8cc:	80 e2       	ldi	r24, 0x20	; 32
     8ce:	90 e0       	ldi	r25, 0x00	; 0
     8d0:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     8d4:	5a 94       	dec	r5
     8d6:	f7 cf       	rjmp	.-18     	; 0x8c6 <__stack+0x67>
     8d8:	00 23       	and	r16, r16
     8da:	29 f0       	breq	.+10     	; 0x8e6 <__stack+0x87>
     8dc:	b7 01       	movw	r22, r14
     8de:	80 2f       	mov	r24, r16
     8e0:	90 e0       	ldi	r25, 0x00	; 0
     8e2:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     8e6:	93 fc       	sbrc	r9, 3
     8e8:	09 c0       	rjmp	.+18     	; 0x8fc <__stack+0x9d>
     8ea:	55 20       	and	r5, r5
     8ec:	39 f0       	breq	.+14     	; 0x8fc <__stack+0x9d>
     8ee:	b7 01       	movw	r22, r14
     8f0:	80 e3       	ldi	r24, 0x30	; 48
     8f2:	90 e0       	ldi	r25, 0x00	; 0
     8f4:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     8f8:	5a 94       	dec	r5
     8fa:	f7 cf       	rjmp	.-18     	; 0x8ea <__stack+0x8b>
     8fc:	97 fe       	sbrs	r9, 7
     8fe:	4c c0       	rjmp	.+152    	; 0x998 <__stack+0x139>
     900:	46 01       	movw	r8, r12
     902:	d7 fe       	sbrs	r13, 7
     904:	02 c0       	rjmp	.+4      	; 0x90a <__stack+0xab>
     906:	81 2c       	mov	r8, r1
     908:	91 2c       	mov	r9, r1
     90a:	c6 01       	movw	r24, r12
     90c:	88 19       	sub	r24, r8
     90e:	99 09       	sbc	r25, r9
     910:	f3 01       	movw	r30, r6
     912:	e8 0f       	add	r30, r24
     914:	f9 1f       	adc	r31, r25
     916:	fe 87       	std	Y+14, r31	; 0x0e
     918:	ed 87       	std	Y+13, r30	; 0x0d
     91a:	96 01       	movw	r18, r12
     91c:	24 19       	sub	r18, r4
     91e:	31 09       	sbc	r19, r1
     920:	38 8b       	std	Y+16, r19	; 0x10
     922:	2f 87       	std	Y+15, r18	; 0x0f
     924:	01 2f       	mov	r16, r17
     926:	10 e0       	ldi	r17, 0x00	; 0
     928:	11 95       	neg	r17
     92a:	01 95       	neg	r16
     92c:	11 09       	sbc	r17, r1
     92e:	3f ef       	ldi	r19, 0xFF	; 255
     930:	83 16       	cp	r8, r19
     932:	93 06       	cpc	r9, r19
     934:	29 f4       	brne	.+10     	; 0x940 <__stack+0xe1>
     936:	b7 01       	movw	r22, r14
     938:	8e e2       	ldi	r24, 0x2E	; 46
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     940:	c8 14       	cp	r12, r8
     942:	d9 04       	cpc	r13, r9
     944:	4c f0       	brlt	.+18     	; 0x958 <__stack+0xf9>
     946:	8f 85       	ldd	r24, Y+15	; 0x0f
     948:	98 89       	ldd	r25, Y+16	; 0x10
     94a:	88 15       	cp	r24, r8
     94c:	99 05       	cpc	r25, r9
     94e:	24 f4       	brge	.+8      	; 0x958 <__stack+0xf9>
     950:	ed 85       	ldd	r30, Y+13	; 0x0d
     952:	fe 85       	ldd	r31, Y+14	; 0x0e
     954:	81 81       	ldd	r24, Z+1	; 0x01
     956:	01 c0       	rjmp	.+2      	; 0x95a <__stack+0xfb>
     958:	80 e3       	ldi	r24, 0x30	; 48
     95a:	f1 e0       	ldi	r31, 0x01	; 1
     95c:	8f 1a       	sub	r8, r31
     95e:	91 08       	sbc	r9, r1
     960:	2d 85       	ldd	r18, Y+13	; 0x0d
     962:	3e 85       	ldd	r19, Y+14	; 0x0e
     964:	2f 5f       	subi	r18, 0xFF	; 255
     966:	3f 4f       	sbci	r19, 0xFF	; 255
     968:	3e 87       	std	Y+14, r19	; 0x0e
     96a:	2d 87       	std	Y+13, r18	; 0x0d
     96c:	80 16       	cp	r8, r16
     96e:	91 06       	cpc	r9, r17
     970:	2c f0       	brlt	.+10     	; 0x97c <__stack+0x11d>
     972:	b7 01       	movw	r22, r14
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     97a:	d9 cf       	rjmp	.-78     	; 0x92e <__stack+0xcf>
     97c:	c8 14       	cp	r12, r8
     97e:	d9 04       	cpc	r13, r9
     980:	41 f4       	brne	.+16     	; 0x992 <__stack+0x133>
     982:	9a 81       	ldd	r25, Y+2	; 0x02
     984:	96 33       	cpi	r25, 0x36	; 54
     986:	20 f4       	brcc	.+8      	; 0x990 <__stack+0x131>
     988:	95 33       	cpi	r25, 0x35	; 53
     98a:	19 f4       	brne	.+6      	; 0x992 <__stack+0x133>
     98c:	3c 85       	ldd	r19, Y+12	; 0x0c
     98e:	34 ff       	sbrs	r19, 4
     990:	81 e3       	ldi	r24, 0x31	; 49
     992:	b7 01       	movw	r22, r14
     994:	90 e0       	ldi	r25, 0x00	; 0
     996:	4e c0       	rjmp	.+156    	; 0xa34 <__stack+0x1d5>
     998:	8a 81       	ldd	r24, Y+2	; 0x02
     99a:	81 33       	cpi	r24, 0x31	; 49
     99c:	19 f0       	breq	.+6      	; 0x9a4 <__stack+0x145>
     99e:	9c 85       	ldd	r25, Y+12	; 0x0c
     9a0:	9f 7e       	andi	r25, 0xEF	; 239
     9a2:	9c 87       	std	Y+12, r25	; 0x0c
     9a4:	b7 01       	movw	r22, r14
     9a6:	90 e0       	ldi	r25, 0x00	; 0
     9a8:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     9ac:	11 11       	cpse	r17, r1
     9ae:	05 c0       	rjmp	.+10     	; 0x9ba <__stack+0x15b>
     9b0:	94 fc       	sbrc	r9, 4
     9b2:	18 c0       	rjmp	.+48     	; 0x9e4 <__stack+0x185>
     9b4:	85 e6       	ldi	r24, 0x65	; 101
     9b6:	90 e0       	ldi	r25, 0x00	; 0
     9b8:	17 c0       	rjmp	.+46     	; 0x9e8 <__stack+0x189>
     9ba:	b7 01       	movw	r22, r14
     9bc:	8e e2       	ldi	r24, 0x2E	; 46
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     9c4:	1e 5f       	subi	r17, 0xFE	; 254
     9c6:	82 e0       	ldi	r24, 0x02	; 2
     9c8:	01 e0       	ldi	r16, 0x01	; 1
     9ca:	08 0f       	add	r16, r24
     9cc:	f3 01       	movw	r30, r6
     9ce:	e8 0f       	add	r30, r24
     9d0:	f1 1d       	adc	r31, r1
     9d2:	80 81       	ld	r24, Z
     9d4:	b7 01       	movw	r22, r14
     9d6:	90 e0       	ldi	r25, 0x00	; 0
     9d8:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     9dc:	80 2f       	mov	r24, r16
     9de:	01 13       	cpse	r16, r17
     9e0:	f3 cf       	rjmp	.-26     	; 0x9c8 <__stack+0x169>
     9e2:	e6 cf       	rjmp	.-52     	; 0x9b0 <__stack+0x151>
     9e4:	85 e4       	ldi	r24, 0x45	; 69
     9e6:	90 e0       	ldi	r25, 0x00	; 0
     9e8:	b7 01       	movw	r22, r14
     9ea:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     9ee:	d7 fc       	sbrc	r13, 7
     9f0:	06 c0       	rjmp	.+12     	; 0x9fe <__stack+0x19f>
     9f2:	c1 14       	cp	r12, r1
     9f4:	d1 04       	cpc	r13, r1
     9f6:	41 f4       	brne	.+16     	; 0xa08 <__stack+0x1a9>
     9f8:	ec 85       	ldd	r30, Y+12	; 0x0c
     9fa:	e4 ff       	sbrs	r30, 4
     9fc:	05 c0       	rjmp	.+10     	; 0xa08 <__stack+0x1a9>
     9fe:	d1 94       	neg	r13
     a00:	c1 94       	neg	r12
     a02:	d1 08       	sbc	r13, r1
     a04:	8d e2       	ldi	r24, 0x2D	; 45
     a06:	01 c0       	rjmp	.+2      	; 0xa0a <__stack+0x1ab>
     a08:	8b e2       	ldi	r24, 0x2B	; 43
     a0a:	b7 01       	movw	r22, r14
     a0c:	90 e0       	ldi	r25, 0x00	; 0
     a0e:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     a12:	80 e3       	ldi	r24, 0x30	; 48
     a14:	2a e0       	ldi	r18, 0x0A	; 10
     a16:	c2 16       	cp	r12, r18
     a18:	d1 04       	cpc	r13, r1
     a1a:	2c f0       	brlt	.+10     	; 0xa26 <__stack+0x1c7>
     a1c:	8f 5f       	subi	r24, 0xFF	; 255
     a1e:	fa e0       	ldi	r31, 0x0A	; 10
     a20:	cf 1a       	sub	r12, r31
     a22:	d1 08       	sbc	r13, r1
     a24:	f7 cf       	rjmp	.-18     	; 0xa14 <__stack+0x1b5>
     a26:	b7 01       	movw	r22, r14
     a28:	90 e0       	ldi	r25, 0x00	; 0
     a2a:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     a2e:	b7 01       	movw	r22, r14
     a30:	c6 01       	movw	r24, r12
     a32:	c0 96       	adiw	r24, 0x30	; 48
     a34:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     a38:	54 c1       	rjmp	.+680    	; 0xce2 <__stack+0x483>
     a3a:	83 36       	cpi	r24, 0x63	; 99
     a3c:	31 f0       	breq	.+12     	; 0xa4a <__stack+0x1eb>
     a3e:	83 37       	cpi	r24, 0x73	; 115
     a40:	79 f0       	breq	.+30     	; 0xa60 <__stack+0x201>
     a42:	83 35       	cpi	r24, 0x53	; 83
     a44:	09 f0       	breq	.+2      	; 0xa48 <__stack+0x1e9>
     a46:	56 c0       	rjmp	.+172    	; 0xaf4 <__stack+0x295>
     a48:	20 c0       	rjmp	.+64     	; 0xa8a <__stack+0x22b>
     a4a:	56 01       	movw	r10, r12
     a4c:	32 e0       	ldi	r19, 0x02	; 2
     a4e:	a3 0e       	add	r10, r19
     a50:	b1 1c       	adc	r11, r1
     a52:	f6 01       	movw	r30, r12
     a54:	80 81       	ld	r24, Z
     a56:	89 83       	std	Y+1, r24	; 0x01
     a58:	01 e0       	ldi	r16, 0x01	; 1
     a5a:	10 e0       	ldi	r17, 0x00	; 0
     a5c:	63 01       	movw	r12, r6
     a5e:	12 c0       	rjmp	.+36     	; 0xa84 <__stack+0x225>
     a60:	56 01       	movw	r10, r12
     a62:	f2 e0       	ldi	r31, 0x02	; 2
     a64:	af 0e       	add	r10, r31
     a66:	b1 1c       	adc	r11, r1
     a68:	f6 01       	movw	r30, r12
     a6a:	c0 80       	ld	r12, Z
     a6c:	d1 80       	ldd	r13, Z+1	; 0x01
     a6e:	96 fe       	sbrs	r9, 6
     a70:	03 c0       	rjmp	.+6      	; 0xa78 <__stack+0x219>
     a72:	61 2f       	mov	r22, r17
     a74:	70 e0       	ldi	r23, 0x00	; 0
     a76:	02 c0       	rjmp	.+4      	; 0xa7c <__stack+0x21d>
     a78:	6f ef       	ldi	r22, 0xFF	; 255
     a7a:	7f ef       	ldi	r23, 0xFF	; 255
     a7c:	c6 01       	movw	r24, r12
     a7e:	0e 94 c3 07 	call	0xf86	; 0xf86 <strnlen>
     a82:	8c 01       	movw	r16, r24
     a84:	f9 2d       	mov	r31, r9
     a86:	ff 77       	andi	r31, 0x7F	; 127
     a88:	14 c0       	rjmp	.+40     	; 0xab2 <__stack+0x253>
     a8a:	56 01       	movw	r10, r12
     a8c:	22 e0       	ldi	r18, 0x02	; 2
     a8e:	a2 0e       	add	r10, r18
     a90:	b1 1c       	adc	r11, r1
     a92:	f6 01       	movw	r30, r12
     a94:	c0 80       	ld	r12, Z
     a96:	d1 80       	ldd	r13, Z+1	; 0x01
     a98:	96 fe       	sbrs	r9, 6
     a9a:	03 c0       	rjmp	.+6      	; 0xaa2 <__stack+0x243>
     a9c:	61 2f       	mov	r22, r17
     a9e:	70 e0       	ldi	r23, 0x00	; 0
     aa0:	02 c0       	rjmp	.+4      	; 0xaa6 <__stack+0x247>
     aa2:	6f ef       	ldi	r22, 0xFF	; 255
     aa4:	7f ef       	ldi	r23, 0xFF	; 255
     aa6:	c6 01       	movw	r24, r12
     aa8:	0e 94 b8 07 	call	0xf70	; 0xf70 <strnlen_P>
     aac:	8c 01       	movw	r16, r24
     aae:	f9 2d       	mov	r31, r9
     ab0:	f0 68       	ori	r31, 0x80	; 128
     ab2:	9f 2e       	mov	r9, r31
     ab4:	f3 fd       	sbrc	r31, 3
     ab6:	1a c0       	rjmp	.+52     	; 0xaec <__stack+0x28d>
     ab8:	85 2d       	mov	r24, r5
     aba:	90 e0       	ldi	r25, 0x00	; 0
     abc:	08 17       	cp	r16, r24
     abe:	19 07       	cpc	r17, r25
     ac0:	a8 f4       	brcc	.+42     	; 0xaec <__stack+0x28d>
     ac2:	b7 01       	movw	r22, r14
     ac4:	80 e2       	ldi	r24, 0x20	; 32
     ac6:	90 e0       	ldi	r25, 0x00	; 0
     ac8:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     acc:	5a 94       	dec	r5
     ace:	f4 cf       	rjmp	.-24     	; 0xab8 <__stack+0x259>
     ad0:	f6 01       	movw	r30, r12
     ad2:	97 fc       	sbrc	r9, 7
     ad4:	85 91       	lpm	r24, Z+
     ad6:	97 fe       	sbrs	r9, 7
     ad8:	81 91       	ld	r24, Z+
     ada:	6f 01       	movw	r12, r30
     adc:	b7 01       	movw	r22, r14
     ade:	90 e0       	ldi	r25, 0x00	; 0
     ae0:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     ae4:	51 10       	cpse	r5, r1
     ae6:	5a 94       	dec	r5
     ae8:	01 50       	subi	r16, 0x01	; 1
     aea:	11 09       	sbc	r17, r1
     aec:	01 15       	cp	r16, r1
     aee:	11 05       	cpc	r17, r1
     af0:	79 f7       	brne	.-34     	; 0xad0 <__stack+0x271>
     af2:	f7 c0       	rjmp	.+494    	; 0xce2 <__stack+0x483>
     af4:	84 36       	cpi	r24, 0x64	; 100
     af6:	11 f0       	breq	.+4      	; 0xafc <__stack+0x29d>
     af8:	89 36       	cpi	r24, 0x69	; 105
     afa:	61 f5       	brne	.+88     	; 0xb54 <__stack+0x2f5>
     afc:	56 01       	movw	r10, r12
     afe:	97 fe       	sbrs	r9, 7
     b00:	09 c0       	rjmp	.+18     	; 0xb14 <__stack+0x2b5>
     b02:	24 e0       	ldi	r18, 0x04	; 4
     b04:	a2 0e       	add	r10, r18
     b06:	b1 1c       	adc	r11, r1
     b08:	f6 01       	movw	r30, r12
     b0a:	60 81       	ld	r22, Z
     b0c:	71 81       	ldd	r23, Z+1	; 0x01
     b0e:	82 81       	ldd	r24, Z+2	; 0x02
     b10:	93 81       	ldd	r25, Z+3	; 0x03
     b12:	0a c0       	rjmp	.+20     	; 0xb28 <__stack+0x2c9>
     b14:	f2 e0       	ldi	r31, 0x02	; 2
     b16:	af 0e       	add	r10, r31
     b18:	b1 1c       	adc	r11, r1
     b1a:	f6 01       	movw	r30, r12
     b1c:	60 81       	ld	r22, Z
     b1e:	71 81       	ldd	r23, Z+1	; 0x01
     b20:	07 2e       	mov	r0, r23
     b22:	00 0c       	add	r0, r0
     b24:	88 0b       	sbc	r24, r24
     b26:	99 0b       	sbc	r25, r25
     b28:	f9 2d       	mov	r31, r9
     b2a:	ff 76       	andi	r31, 0x6F	; 111
     b2c:	9f 2e       	mov	r9, r31
     b2e:	97 ff       	sbrs	r25, 7
     b30:	09 c0       	rjmp	.+18     	; 0xb44 <__stack+0x2e5>
     b32:	90 95       	com	r25
     b34:	80 95       	com	r24
     b36:	70 95       	com	r23
     b38:	61 95       	neg	r22
     b3a:	7f 4f       	sbci	r23, 0xFF	; 255
     b3c:	8f 4f       	sbci	r24, 0xFF	; 255
     b3e:	9f 4f       	sbci	r25, 0xFF	; 255
     b40:	f0 68       	ori	r31, 0x80	; 128
     b42:	9f 2e       	mov	r9, r31
     b44:	2a e0       	ldi	r18, 0x0A	; 10
     b46:	30 e0       	ldi	r19, 0x00	; 0
     b48:	a3 01       	movw	r20, r6
     b4a:	0e 94 2c 08 	call	0x1058	; 0x1058 <__ultoa_invert>
     b4e:	c8 2e       	mov	r12, r24
     b50:	c6 18       	sub	r12, r6
     b52:	3f c0       	rjmp	.+126    	; 0xbd2 <__stack+0x373>
     b54:	09 2d       	mov	r16, r9
     b56:	85 37       	cpi	r24, 0x75	; 117
     b58:	21 f4       	brne	.+8      	; 0xb62 <__stack+0x303>
     b5a:	0f 7e       	andi	r16, 0xEF	; 239
     b5c:	2a e0       	ldi	r18, 0x0A	; 10
     b5e:	30 e0       	ldi	r19, 0x00	; 0
     b60:	1d c0       	rjmp	.+58     	; 0xb9c <__stack+0x33d>
     b62:	09 7f       	andi	r16, 0xF9	; 249
     b64:	8f 36       	cpi	r24, 0x6F	; 111
     b66:	91 f0       	breq	.+36     	; 0xb8c <__stack+0x32d>
     b68:	18 f4       	brcc	.+6      	; 0xb70 <__stack+0x311>
     b6a:	88 35       	cpi	r24, 0x58	; 88
     b6c:	59 f0       	breq	.+22     	; 0xb84 <__stack+0x325>
     b6e:	c3 c0       	rjmp	.+390    	; 0xcf6 <__stack+0x497>
     b70:	80 37       	cpi	r24, 0x70	; 112
     b72:	19 f0       	breq	.+6      	; 0xb7a <__stack+0x31b>
     b74:	88 37       	cpi	r24, 0x78	; 120
     b76:	11 f0       	breq	.+4      	; 0xb7c <__stack+0x31d>
     b78:	be c0       	rjmp	.+380    	; 0xcf6 <__stack+0x497>
     b7a:	00 61       	ori	r16, 0x10	; 16
     b7c:	04 ff       	sbrs	r16, 4
     b7e:	09 c0       	rjmp	.+18     	; 0xb92 <__stack+0x333>
     b80:	04 60       	ori	r16, 0x04	; 4
     b82:	07 c0       	rjmp	.+14     	; 0xb92 <__stack+0x333>
     b84:	94 fe       	sbrs	r9, 4
     b86:	08 c0       	rjmp	.+16     	; 0xb98 <__stack+0x339>
     b88:	06 60       	ori	r16, 0x06	; 6
     b8a:	06 c0       	rjmp	.+12     	; 0xb98 <__stack+0x339>
     b8c:	28 e0       	ldi	r18, 0x08	; 8
     b8e:	30 e0       	ldi	r19, 0x00	; 0
     b90:	05 c0       	rjmp	.+10     	; 0xb9c <__stack+0x33d>
     b92:	20 e1       	ldi	r18, 0x10	; 16
     b94:	30 e0       	ldi	r19, 0x00	; 0
     b96:	02 c0       	rjmp	.+4      	; 0xb9c <__stack+0x33d>
     b98:	20 e1       	ldi	r18, 0x10	; 16
     b9a:	32 e0       	ldi	r19, 0x02	; 2
     b9c:	56 01       	movw	r10, r12
     b9e:	07 ff       	sbrs	r16, 7
     ba0:	09 c0       	rjmp	.+18     	; 0xbb4 <__stack+0x355>
     ba2:	84 e0       	ldi	r24, 0x04	; 4
     ba4:	a8 0e       	add	r10, r24
     ba6:	b1 1c       	adc	r11, r1
     ba8:	f6 01       	movw	r30, r12
     baa:	60 81       	ld	r22, Z
     bac:	71 81       	ldd	r23, Z+1	; 0x01
     bae:	82 81       	ldd	r24, Z+2	; 0x02
     bb0:	93 81       	ldd	r25, Z+3	; 0x03
     bb2:	08 c0       	rjmp	.+16     	; 0xbc4 <__stack+0x365>
     bb4:	f2 e0       	ldi	r31, 0x02	; 2
     bb6:	af 0e       	add	r10, r31
     bb8:	b1 1c       	adc	r11, r1
     bba:	f6 01       	movw	r30, r12
     bbc:	60 81       	ld	r22, Z
     bbe:	71 81       	ldd	r23, Z+1	; 0x01
     bc0:	80 e0       	ldi	r24, 0x00	; 0
     bc2:	90 e0       	ldi	r25, 0x00	; 0
     bc4:	a3 01       	movw	r20, r6
     bc6:	0e 94 2c 08 	call	0x1058	; 0x1058 <__ultoa_invert>
     bca:	c8 2e       	mov	r12, r24
     bcc:	c6 18       	sub	r12, r6
     bce:	0f 77       	andi	r16, 0x7F	; 127
     bd0:	90 2e       	mov	r9, r16
     bd2:	96 fe       	sbrs	r9, 6
     bd4:	0b c0       	rjmp	.+22     	; 0xbec <__stack+0x38d>
     bd6:	09 2d       	mov	r16, r9
     bd8:	0e 7f       	andi	r16, 0xFE	; 254
     bda:	c1 16       	cp	r12, r17
     bdc:	50 f4       	brcc	.+20     	; 0xbf2 <__stack+0x393>
     bde:	94 fe       	sbrs	r9, 4
     be0:	0a c0       	rjmp	.+20     	; 0xbf6 <__stack+0x397>
     be2:	92 fc       	sbrc	r9, 2
     be4:	08 c0       	rjmp	.+16     	; 0xbf6 <__stack+0x397>
     be6:	09 2d       	mov	r16, r9
     be8:	0e 7e       	andi	r16, 0xEE	; 238
     bea:	05 c0       	rjmp	.+10     	; 0xbf6 <__stack+0x397>
     bec:	dc 2c       	mov	r13, r12
     bee:	09 2d       	mov	r16, r9
     bf0:	03 c0       	rjmp	.+6      	; 0xbf8 <__stack+0x399>
     bf2:	dc 2c       	mov	r13, r12
     bf4:	01 c0       	rjmp	.+2      	; 0xbf8 <__stack+0x399>
     bf6:	d1 2e       	mov	r13, r17
     bf8:	04 ff       	sbrs	r16, 4
     bfa:	0d c0       	rjmp	.+26     	; 0xc16 <__stack+0x3b7>
     bfc:	fe 01       	movw	r30, r28
     bfe:	ec 0d       	add	r30, r12
     c00:	f1 1d       	adc	r31, r1
     c02:	80 81       	ld	r24, Z
     c04:	80 33       	cpi	r24, 0x30	; 48
     c06:	11 f4       	brne	.+4      	; 0xc0c <__stack+0x3ad>
     c08:	09 7e       	andi	r16, 0xE9	; 233
     c0a:	09 c0       	rjmp	.+18     	; 0xc1e <__stack+0x3bf>
     c0c:	02 ff       	sbrs	r16, 2
     c0e:	06 c0       	rjmp	.+12     	; 0xc1c <__stack+0x3bd>
     c10:	d3 94       	inc	r13
     c12:	d3 94       	inc	r13
     c14:	04 c0       	rjmp	.+8      	; 0xc1e <__stack+0x3bf>
     c16:	80 2f       	mov	r24, r16
     c18:	86 78       	andi	r24, 0x86	; 134
     c1a:	09 f0       	breq	.+2      	; 0xc1e <__stack+0x3bf>
     c1c:	d3 94       	inc	r13
     c1e:	03 fd       	sbrc	r16, 3
     c20:	11 c0       	rjmp	.+34     	; 0xc44 <__stack+0x3e5>
     c22:	00 ff       	sbrs	r16, 0
     c24:	06 c0       	rjmp	.+12     	; 0xc32 <__stack+0x3d3>
     c26:	1c 2d       	mov	r17, r12
     c28:	d5 14       	cp	r13, r5
     c2a:	80 f4       	brcc	.+32     	; 0xc4c <__stack+0x3ed>
     c2c:	15 0d       	add	r17, r5
     c2e:	1d 19       	sub	r17, r13
     c30:	0d c0       	rjmp	.+26     	; 0xc4c <__stack+0x3ed>
     c32:	d5 14       	cp	r13, r5
     c34:	58 f4       	brcc	.+22     	; 0xc4c <__stack+0x3ed>
     c36:	b7 01       	movw	r22, r14
     c38:	80 e2       	ldi	r24, 0x20	; 32
     c3a:	90 e0       	ldi	r25, 0x00	; 0
     c3c:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     c40:	d3 94       	inc	r13
     c42:	f7 cf       	rjmp	.-18     	; 0xc32 <__stack+0x3d3>
     c44:	d5 14       	cp	r13, r5
     c46:	10 f4       	brcc	.+4      	; 0xc4c <__stack+0x3ed>
     c48:	5d 18       	sub	r5, r13
     c4a:	01 c0       	rjmp	.+2      	; 0xc4e <__stack+0x3ef>
     c4c:	51 2c       	mov	r5, r1
     c4e:	04 ff       	sbrs	r16, 4
     c50:	10 c0       	rjmp	.+32     	; 0xc72 <__stack+0x413>
     c52:	b7 01       	movw	r22, r14
     c54:	80 e3       	ldi	r24, 0x30	; 48
     c56:	90 e0       	ldi	r25, 0x00	; 0
     c58:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     c5c:	02 ff       	sbrs	r16, 2
     c5e:	17 c0       	rjmp	.+46     	; 0xc8e <__stack+0x42f>
     c60:	01 fd       	sbrc	r16, 1
     c62:	03 c0       	rjmp	.+6      	; 0xc6a <__stack+0x40b>
     c64:	88 e7       	ldi	r24, 0x78	; 120
     c66:	90 e0       	ldi	r25, 0x00	; 0
     c68:	02 c0       	rjmp	.+4      	; 0xc6e <__stack+0x40f>
     c6a:	88 e5       	ldi	r24, 0x58	; 88
     c6c:	90 e0       	ldi	r25, 0x00	; 0
     c6e:	b7 01       	movw	r22, r14
     c70:	0c c0       	rjmp	.+24     	; 0xc8a <__stack+0x42b>
     c72:	80 2f       	mov	r24, r16
     c74:	86 78       	andi	r24, 0x86	; 134
     c76:	59 f0       	breq	.+22     	; 0xc8e <__stack+0x42f>
     c78:	01 ff       	sbrs	r16, 1
     c7a:	02 c0       	rjmp	.+4      	; 0xc80 <__stack+0x421>
     c7c:	8b e2       	ldi	r24, 0x2B	; 43
     c7e:	01 c0       	rjmp	.+2      	; 0xc82 <__stack+0x423>
     c80:	80 e2       	ldi	r24, 0x20	; 32
     c82:	07 fd       	sbrc	r16, 7
     c84:	8d e2       	ldi	r24, 0x2D	; 45
     c86:	b7 01       	movw	r22, r14
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     c8e:	c1 16       	cp	r12, r17
     c90:	38 f4       	brcc	.+14     	; 0xca0 <__stack+0x441>
     c92:	b7 01       	movw	r22, r14
     c94:	80 e3       	ldi	r24, 0x30	; 48
     c96:	90 e0       	ldi	r25, 0x00	; 0
     c98:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     c9c:	11 50       	subi	r17, 0x01	; 1
     c9e:	f7 cf       	rjmp	.-18     	; 0xc8e <__stack+0x42f>
     ca0:	ca 94       	dec	r12
     ca2:	f3 01       	movw	r30, r6
     ca4:	ec 0d       	add	r30, r12
     ca6:	f1 1d       	adc	r31, r1
     ca8:	80 81       	ld	r24, Z
     caa:	b7 01       	movw	r22, r14
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     cb2:	c1 10       	cpse	r12, r1
     cb4:	f5 cf       	rjmp	.-22     	; 0xca0 <__stack+0x441>
     cb6:	15 c0       	rjmp	.+42     	; 0xce2 <__stack+0x483>
     cb8:	f4 e0       	ldi	r31, 0x04	; 4
     cba:	f5 15       	cp	r31, r5
     cbc:	60 f5       	brcc	.+88     	; 0xd16 <__stack+0x4b7>
     cbe:	84 e0       	ldi	r24, 0x04	; 4
     cc0:	58 1a       	sub	r5, r24
     cc2:	93 fe       	sbrs	r9, 3
     cc4:	1f c0       	rjmp	.+62     	; 0xd04 <__stack+0x4a5>
     cc6:	01 11       	cpse	r16, r1
     cc8:	27 c0       	rjmp	.+78     	; 0xd18 <__stack+0x4b9>
     cca:	2c 85       	ldd	r18, Y+12	; 0x0c
     ccc:	23 ff       	sbrs	r18, 3
     cce:	2a c0       	rjmp	.+84     	; 0xd24 <__stack+0x4c5>
     cd0:	04 e5       	ldi	r16, 0x54	; 84
     cd2:	10 e0       	ldi	r17, 0x00	; 0
     cd4:	39 2d       	mov	r19, r9
     cd6:	30 71       	andi	r19, 0x10	; 16
     cd8:	93 2e       	mov	r9, r19
     cda:	f8 01       	movw	r30, r16
     cdc:	84 91       	lpm	r24, Z
     cde:	81 11       	cpse	r24, r1
     ce0:	24 c0       	rjmp	.+72     	; 0xd2a <__stack+0x4cb>
     ce2:	55 20       	and	r5, r5
     ce4:	09 f4       	brne	.+2      	; 0xce8 <__stack+0x489>
     ce6:	e4 cc       	rjmp	.-1592   	; 0x6b0 <vfprintf+0x58>
     ce8:	b7 01       	movw	r22, r14
     cea:	80 e2       	ldi	r24, 0x20	; 32
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     cf2:	5a 94       	dec	r5
     cf4:	f6 cf       	rjmp	.-20     	; 0xce2 <__stack+0x483>
     cf6:	f7 01       	movw	r30, r14
     cf8:	86 81       	ldd	r24, Z+6	; 0x06
     cfa:	97 81       	ldd	r25, Z+7	; 0x07
     cfc:	26 c0       	rjmp	.+76     	; 0xd4a <__stack+0x4eb>
     cfe:	8f ef       	ldi	r24, 0xFF	; 255
     d00:	9f ef       	ldi	r25, 0xFF	; 255
     d02:	23 c0       	rjmp	.+70     	; 0xd4a <__stack+0x4eb>
     d04:	b7 01       	movw	r22, r14
     d06:	80 e2       	ldi	r24, 0x20	; 32
     d08:	90 e0       	ldi	r25, 0x00	; 0
     d0a:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     d0e:	5a 94       	dec	r5
     d10:	51 10       	cpse	r5, r1
     d12:	f8 cf       	rjmp	.-16     	; 0xd04 <__stack+0x4a5>
     d14:	d8 cf       	rjmp	.-80     	; 0xcc6 <__stack+0x467>
     d16:	51 2c       	mov	r5, r1
     d18:	b7 01       	movw	r22, r14
     d1a:	80 2f       	mov	r24, r16
     d1c:	90 e0       	ldi	r25, 0x00	; 0
     d1e:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     d22:	d3 cf       	rjmp	.-90     	; 0xcca <__stack+0x46b>
     d24:	08 e5       	ldi	r16, 0x58	; 88
     d26:	10 e0       	ldi	r17, 0x00	; 0
     d28:	d5 cf       	rjmp	.-86     	; 0xcd4 <__stack+0x475>
     d2a:	91 10       	cpse	r9, r1
     d2c:	80 52       	subi	r24, 0x20	; 32
     d2e:	b7 01       	movw	r22, r14
     d30:	90 e0       	ldi	r25, 0x00	; 0
     d32:	0e 94 ce 07 	call	0xf9c	; 0xf9c <fputc>
     d36:	0f 5f       	subi	r16, 0xFF	; 255
     d38:	1f 4f       	sbci	r17, 0xFF	; 255
     d3a:	cf cf       	rjmp	.-98     	; 0xcda <__stack+0x47b>
     d3c:	23 e0       	ldi	r18, 0x03	; 3
     d3e:	25 15       	cp	r18, r5
     d40:	10 f4       	brcc	.+4      	; 0xd46 <__stack+0x4e7>
     d42:	83 e0       	ldi	r24, 0x03	; 3
     d44:	bd cf       	rjmp	.-134    	; 0xcc0 <__stack+0x461>
     d46:	51 2c       	mov	r5, r1
     d48:	c0 cf       	rjmp	.-128    	; 0xcca <__stack+0x46b>
     d4a:	60 96       	adiw	r28, 0x10	; 16
     d4c:	e2 e1       	ldi	r30, 0x12	; 18
     d4e:	0c 94 c5 06 	jmp	0xd8a	; 0xd8a <__epilogue_restores__>

00000d52 <__prologue_saves__>:
     d52:	2f 92       	push	r2
     d54:	3f 92       	push	r3
     d56:	4f 92       	push	r4
     d58:	5f 92       	push	r5
     d5a:	6f 92       	push	r6
     d5c:	7f 92       	push	r7
     d5e:	8f 92       	push	r8
     d60:	9f 92       	push	r9
     d62:	af 92       	push	r10
     d64:	bf 92       	push	r11
     d66:	cf 92       	push	r12
     d68:	df 92       	push	r13
     d6a:	ef 92       	push	r14
     d6c:	ff 92       	push	r15
     d6e:	0f 93       	push	r16
     d70:	1f 93       	push	r17
     d72:	cf 93       	push	r28
     d74:	df 93       	push	r29
     d76:	cd b7       	in	r28, 0x3d	; 61
     d78:	de b7       	in	r29, 0x3e	; 62
     d7a:	ca 1b       	sub	r28, r26
     d7c:	db 0b       	sbc	r29, r27
     d7e:	0f b6       	in	r0, 0x3f	; 63
     d80:	f8 94       	cli
     d82:	de bf       	out	0x3e, r29	; 62
     d84:	0f be       	out	0x3f, r0	; 63
     d86:	cd bf       	out	0x3d, r28	; 61
     d88:	09 94       	ijmp

00000d8a <__epilogue_restores__>:
     d8a:	2a 88       	ldd	r2, Y+18	; 0x12
     d8c:	39 88       	ldd	r3, Y+17	; 0x11
     d8e:	48 88       	ldd	r4, Y+16	; 0x10
     d90:	5f 84       	ldd	r5, Y+15	; 0x0f
     d92:	6e 84       	ldd	r6, Y+14	; 0x0e
     d94:	7d 84       	ldd	r7, Y+13	; 0x0d
     d96:	8c 84       	ldd	r8, Y+12	; 0x0c
     d98:	9b 84       	ldd	r9, Y+11	; 0x0b
     d9a:	aa 84       	ldd	r10, Y+10	; 0x0a
     d9c:	b9 84       	ldd	r11, Y+9	; 0x09
     d9e:	c8 84       	ldd	r12, Y+8	; 0x08
     da0:	df 80       	ldd	r13, Y+7	; 0x07
     da2:	ee 80       	ldd	r14, Y+6	; 0x06
     da4:	fd 80       	ldd	r15, Y+5	; 0x05
     da6:	0c 81       	ldd	r16, Y+4	; 0x04
     da8:	1b 81       	ldd	r17, Y+3	; 0x03
     daa:	aa 81       	ldd	r26, Y+2	; 0x02
     dac:	b9 81       	ldd	r27, Y+1	; 0x01
     dae:	ce 0f       	add	r28, r30
     db0:	d1 1d       	adc	r29, r1
     db2:	0f b6       	in	r0, 0x3f	; 63
     db4:	f8 94       	cli
     db6:	de bf       	out	0x3e, r29	; 62
     db8:	0f be       	out	0x3f, r0	; 63
     dba:	cd bf       	out	0x3d, r28	; 61
     dbc:	ed 01       	movw	r28, r26
     dbe:	08 95       	ret

00000dc0 <__ftoa_engine>:
     dc0:	28 30       	cpi	r18, 0x08	; 8
     dc2:	08 f0       	brcs	.+2      	; 0xdc6 <__ftoa_engine+0x6>
     dc4:	27 e0       	ldi	r18, 0x07	; 7
     dc6:	33 27       	eor	r19, r19
     dc8:	da 01       	movw	r26, r20
     dca:	99 0f       	add	r25, r25
     dcc:	31 1d       	adc	r19, r1
     dce:	87 fd       	sbrc	r24, 7
     dd0:	91 60       	ori	r25, 0x01	; 1
     dd2:	00 96       	adiw	r24, 0x00	; 0
     dd4:	61 05       	cpc	r22, r1
     dd6:	71 05       	cpc	r23, r1
     dd8:	39 f4       	brne	.+14     	; 0xde8 <__ftoa_engine+0x28>
     dda:	32 60       	ori	r19, 0x02	; 2
     ddc:	2e 5f       	subi	r18, 0xFE	; 254
     dde:	3d 93       	st	X+, r19
     de0:	30 e3       	ldi	r19, 0x30	; 48
     de2:	2a 95       	dec	r18
     de4:	e1 f7       	brne	.-8      	; 0xdde <__ftoa_engine+0x1e>
     de6:	08 95       	ret
     de8:	9f 3f       	cpi	r25, 0xFF	; 255
     dea:	30 f0       	brcs	.+12     	; 0xdf8 <__ftoa_engine+0x38>
     dec:	80 38       	cpi	r24, 0x80	; 128
     dee:	71 05       	cpc	r23, r1
     df0:	61 05       	cpc	r22, r1
     df2:	09 f0       	breq	.+2      	; 0xdf6 <__ftoa_engine+0x36>
     df4:	3c 5f       	subi	r19, 0xFC	; 252
     df6:	3c 5f       	subi	r19, 0xFC	; 252
     df8:	3d 93       	st	X+, r19
     dfa:	91 30       	cpi	r25, 0x01	; 1
     dfc:	08 f0       	brcs	.+2      	; 0xe00 <__ftoa_engine+0x40>
     dfe:	80 68       	ori	r24, 0x80	; 128
     e00:	91 1d       	adc	r25, r1
     e02:	df 93       	push	r29
     e04:	cf 93       	push	r28
     e06:	1f 93       	push	r17
     e08:	0f 93       	push	r16
     e0a:	ff 92       	push	r15
     e0c:	ef 92       	push	r14
     e0e:	19 2f       	mov	r17, r25
     e10:	98 7f       	andi	r25, 0xF8	; 248
     e12:	96 95       	lsr	r25
     e14:	e9 2f       	mov	r30, r25
     e16:	96 95       	lsr	r25
     e18:	96 95       	lsr	r25
     e1a:	e9 0f       	add	r30, r25
     e1c:	ff 27       	eor	r31, r31
     e1e:	ea 54       	subi	r30, 0x4A	; 74
     e20:	ff 4f       	sbci	r31, 0xFF	; 255
     e22:	99 27       	eor	r25, r25
     e24:	33 27       	eor	r19, r19
     e26:	ee 24       	eor	r14, r14
     e28:	ff 24       	eor	r15, r15
     e2a:	a7 01       	movw	r20, r14
     e2c:	e7 01       	movw	r28, r14
     e2e:	05 90       	lpm	r0, Z+
     e30:	08 94       	sec
     e32:	07 94       	ror	r0
     e34:	28 f4       	brcc	.+10     	; 0xe40 <__ftoa_engine+0x80>
     e36:	36 0f       	add	r19, r22
     e38:	e7 1e       	adc	r14, r23
     e3a:	f8 1e       	adc	r15, r24
     e3c:	49 1f       	adc	r20, r25
     e3e:	51 1d       	adc	r21, r1
     e40:	66 0f       	add	r22, r22
     e42:	77 1f       	adc	r23, r23
     e44:	88 1f       	adc	r24, r24
     e46:	99 1f       	adc	r25, r25
     e48:	06 94       	lsr	r0
     e4a:	a1 f7       	brne	.-24     	; 0xe34 <__ftoa_engine+0x74>
     e4c:	05 90       	lpm	r0, Z+
     e4e:	07 94       	ror	r0
     e50:	28 f4       	brcc	.+10     	; 0xe5c <__ftoa_engine+0x9c>
     e52:	e7 0e       	add	r14, r23
     e54:	f8 1e       	adc	r15, r24
     e56:	49 1f       	adc	r20, r25
     e58:	56 1f       	adc	r21, r22
     e5a:	c1 1d       	adc	r28, r1
     e5c:	77 0f       	add	r23, r23
     e5e:	88 1f       	adc	r24, r24
     e60:	99 1f       	adc	r25, r25
     e62:	66 1f       	adc	r22, r22
     e64:	06 94       	lsr	r0
     e66:	a1 f7       	brne	.-24     	; 0xe50 <__ftoa_engine+0x90>
     e68:	05 90       	lpm	r0, Z+
     e6a:	07 94       	ror	r0
     e6c:	28 f4       	brcc	.+10     	; 0xe78 <__ftoa_engine+0xb8>
     e6e:	f8 0e       	add	r15, r24
     e70:	49 1f       	adc	r20, r25
     e72:	56 1f       	adc	r21, r22
     e74:	c7 1f       	adc	r28, r23
     e76:	d1 1d       	adc	r29, r1
     e78:	88 0f       	add	r24, r24
     e7a:	99 1f       	adc	r25, r25
     e7c:	66 1f       	adc	r22, r22
     e7e:	77 1f       	adc	r23, r23
     e80:	06 94       	lsr	r0
     e82:	a1 f7       	brne	.-24     	; 0xe6c <__ftoa_engine+0xac>
     e84:	05 90       	lpm	r0, Z+
     e86:	07 94       	ror	r0
     e88:	20 f4       	brcc	.+8      	; 0xe92 <__ftoa_engine+0xd2>
     e8a:	49 0f       	add	r20, r25
     e8c:	56 1f       	adc	r21, r22
     e8e:	c7 1f       	adc	r28, r23
     e90:	d8 1f       	adc	r29, r24
     e92:	99 0f       	add	r25, r25
     e94:	66 1f       	adc	r22, r22
     e96:	77 1f       	adc	r23, r23
     e98:	88 1f       	adc	r24, r24
     e9a:	06 94       	lsr	r0
     e9c:	a9 f7       	brne	.-22     	; 0xe88 <__ftoa_engine+0xc8>
     e9e:	84 91       	lpm	r24, Z
     ea0:	10 95       	com	r17
     ea2:	17 70       	andi	r17, 0x07	; 7
     ea4:	41 f0       	breq	.+16     	; 0xeb6 <__ftoa_engine+0xf6>
     ea6:	d6 95       	lsr	r29
     ea8:	c7 95       	ror	r28
     eaa:	57 95       	ror	r21
     eac:	47 95       	ror	r20
     eae:	f7 94       	ror	r15
     eb0:	e7 94       	ror	r14
     eb2:	1a 95       	dec	r17
     eb4:	c1 f7       	brne	.-16     	; 0xea6 <__ftoa_engine+0xe6>
     eb6:	ec e5       	ldi	r30, 0x5C	; 92
     eb8:	f0 e0       	ldi	r31, 0x00	; 0
     eba:	68 94       	set
     ebc:	15 90       	lpm	r1, Z+
     ebe:	15 91       	lpm	r17, Z+
     ec0:	35 91       	lpm	r19, Z+
     ec2:	65 91       	lpm	r22, Z+
     ec4:	95 91       	lpm	r25, Z+
     ec6:	05 90       	lpm	r0, Z+
     ec8:	7f e2       	ldi	r23, 0x2F	; 47
     eca:	73 95       	inc	r23
     ecc:	e1 18       	sub	r14, r1
     ece:	f1 0a       	sbc	r15, r17
     ed0:	43 0b       	sbc	r20, r19
     ed2:	56 0b       	sbc	r21, r22
     ed4:	c9 0b       	sbc	r28, r25
     ed6:	d0 09       	sbc	r29, r0
     ed8:	c0 f7       	brcc	.-16     	; 0xeca <__ftoa_engine+0x10a>
     eda:	e1 0c       	add	r14, r1
     edc:	f1 1e       	adc	r15, r17
     ede:	43 1f       	adc	r20, r19
     ee0:	56 1f       	adc	r21, r22
     ee2:	c9 1f       	adc	r28, r25
     ee4:	d0 1d       	adc	r29, r0
     ee6:	7e f4       	brtc	.+30     	; 0xf06 <__ftoa_engine+0x146>
     ee8:	70 33       	cpi	r23, 0x30	; 48
     eea:	11 f4       	brne	.+4      	; 0xef0 <__ftoa_engine+0x130>
     eec:	8a 95       	dec	r24
     eee:	e6 cf       	rjmp	.-52     	; 0xebc <__ftoa_engine+0xfc>
     ef0:	e8 94       	clt
     ef2:	01 50       	subi	r16, 0x01	; 1
     ef4:	30 f0       	brcs	.+12     	; 0xf02 <__ftoa_engine+0x142>
     ef6:	08 0f       	add	r16, r24
     ef8:	0a f4       	brpl	.+2      	; 0xefc <__ftoa_engine+0x13c>
     efa:	00 27       	eor	r16, r16
     efc:	02 17       	cp	r16, r18
     efe:	08 f4       	brcc	.+2      	; 0xf02 <__ftoa_engine+0x142>
     f00:	20 2f       	mov	r18, r16
     f02:	23 95       	inc	r18
     f04:	02 2f       	mov	r16, r18
     f06:	7a 33       	cpi	r23, 0x3A	; 58
     f08:	28 f0       	brcs	.+10     	; 0xf14 <__ftoa_engine+0x154>
     f0a:	79 e3       	ldi	r23, 0x39	; 57
     f0c:	7d 93       	st	X+, r23
     f0e:	2a 95       	dec	r18
     f10:	e9 f7       	brne	.-6      	; 0xf0c <__ftoa_engine+0x14c>
     f12:	10 c0       	rjmp	.+32     	; 0xf34 <__ftoa_engine+0x174>
     f14:	7d 93       	st	X+, r23
     f16:	2a 95       	dec	r18
     f18:	89 f6       	brne	.-94     	; 0xebc <__ftoa_engine+0xfc>
     f1a:	06 94       	lsr	r0
     f1c:	97 95       	ror	r25
     f1e:	67 95       	ror	r22
     f20:	37 95       	ror	r19
     f22:	17 95       	ror	r17
     f24:	17 94       	ror	r1
     f26:	e1 18       	sub	r14, r1
     f28:	f1 0a       	sbc	r15, r17
     f2a:	43 0b       	sbc	r20, r19
     f2c:	56 0b       	sbc	r21, r22
     f2e:	c9 0b       	sbc	r28, r25
     f30:	d0 09       	sbc	r29, r0
     f32:	98 f0       	brcs	.+38     	; 0xf5a <__ftoa_engine+0x19a>
     f34:	23 95       	inc	r18
     f36:	7e 91       	ld	r23, -X
     f38:	73 95       	inc	r23
     f3a:	7a 33       	cpi	r23, 0x3A	; 58
     f3c:	08 f0       	brcs	.+2      	; 0xf40 <__ftoa_engine+0x180>
     f3e:	70 e3       	ldi	r23, 0x30	; 48
     f40:	7c 93       	st	X, r23
     f42:	20 13       	cpse	r18, r16
     f44:	b8 f7       	brcc	.-18     	; 0xf34 <__ftoa_engine+0x174>
     f46:	7e 91       	ld	r23, -X
     f48:	70 61       	ori	r23, 0x10	; 16
     f4a:	7d 93       	st	X+, r23
     f4c:	30 f0       	brcs	.+12     	; 0xf5a <__ftoa_engine+0x19a>
     f4e:	83 95       	inc	r24
     f50:	71 e3       	ldi	r23, 0x31	; 49
     f52:	7d 93       	st	X+, r23
     f54:	70 e3       	ldi	r23, 0x30	; 48
     f56:	2a 95       	dec	r18
     f58:	e1 f7       	brne	.-8      	; 0xf52 <__ftoa_engine+0x192>
     f5a:	11 24       	eor	r1, r1
     f5c:	ef 90       	pop	r14
     f5e:	ff 90       	pop	r15
     f60:	0f 91       	pop	r16
     f62:	1f 91       	pop	r17
     f64:	cf 91       	pop	r28
     f66:	df 91       	pop	r29
     f68:	99 27       	eor	r25, r25
     f6a:	87 fd       	sbrc	r24, 7
     f6c:	90 95       	com	r25
     f6e:	08 95       	ret

00000f70 <strnlen_P>:
     f70:	fc 01       	movw	r30, r24
     f72:	05 90       	lpm	r0, Z+
     f74:	61 50       	subi	r22, 0x01	; 1
     f76:	70 40       	sbci	r23, 0x00	; 0
     f78:	01 10       	cpse	r0, r1
     f7a:	d8 f7       	brcc	.-10     	; 0xf72 <strnlen_P+0x2>
     f7c:	80 95       	com	r24
     f7e:	90 95       	com	r25
     f80:	8e 0f       	add	r24, r30
     f82:	9f 1f       	adc	r25, r31
     f84:	08 95       	ret

00000f86 <strnlen>:
     f86:	fc 01       	movw	r30, r24
     f88:	61 50       	subi	r22, 0x01	; 1
     f8a:	70 40       	sbci	r23, 0x00	; 0
     f8c:	01 90       	ld	r0, Z+
     f8e:	01 10       	cpse	r0, r1
     f90:	d8 f7       	brcc	.-10     	; 0xf88 <strnlen+0x2>
     f92:	80 95       	com	r24
     f94:	90 95       	com	r25
     f96:	8e 0f       	add	r24, r30
     f98:	9f 1f       	adc	r25, r31
     f9a:	08 95       	ret

00000f9c <fputc>:
     f9c:	0f 93       	push	r16
     f9e:	1f 93       	push	r17
     fa0:	cf 93       	push	r28
     fa2:	df 93       	push	r29
     fa4:	fb 01       	movw	r30, r22
     fa6:	23 81       	ldd	r18, Z+3	; 0x03
     fa8:	21 fd       	sbrc	r18, 1
     faa:	03 c0       	rjmp	.+6      	; 0xfb2 <fputc+0x16>
     fac:	8f ef       	ldi	r24, 0xFF	; 255
     fae:	9f ef       	ldi	r25, 0xFF	; 255
     fb0:	2c c0       	rjmp	.+88     	; 0x100a <fputc+0x6e>
     fb2:	22 ff       	sbrs	r18, 2
     fb4:	16 c0       	rjmp	.+44     	; 0xfe2 <fputc+0x46>
     fb6:	46 81       	ldd	r20, Z+6	; 0x06
     fb8:	57 81       	ldd	r21, Z+7	; 0x07
     fba:	24 81       	ldd	r18, Z+4	; 0x04
     fbc:	35 81       	ldd	r19, Z+5	; 0x05
     fbe:	42 17       	cp	r20, r18
     fc0:	53 07       	cpc	r21, r19
     fc2:	44 f4       	brge	.+16     	; 0xfd4 <fputc+0x38>
     fc4:	a0 81       	ld	r26, Z
     fc6:	b1 81       	ldd	r27, Z+1	; 0x01
     fc8:	9d 01       	movw	r18, r26
     fca:	2f 5f       	subi	r18, 0xFF	; 255
     fcc:	3f 4f       	sbci	r19, 0xFF	; 255
     fce:	31 83       	std	Z+1, r19	; 0x01
     fd0:	20 83       	st	Z, r18
     fd2:	8c 93       	st	X, r24
     fd4:	26 81       	ldd	r18, Z+6	; 0x06
     fd6:	37 81       	ldd	r19, Z+7	; 0x07
     fd8:	2f 5f       	subi	r18, 0xFF	; 255
     fda:	3f 4f       	sbci	r19, 0xFF	; 255
     fdc:	37 83       	std	Z+7, r19	; 0x07
     fde:	26 83       	std	Z+6, r18	; 0x06
     fe0:	14 c0       	rjmp	.+40     	; 0x100a <fputc+0x6e>
     fe2:	8b 01       	movw	r16, r22
     fe4:	ec 01       	movw	r28, r24
     fe6:	fb 01       	movw	r30, r22
     fe8:	00 84       	ldd	r0, Z+8	; 0x08
     fea:	f1 85       	ldd	r31, Z+9	; 0x09
     fec:	e0 2d       	mov	r30, r0
     fee:	09 95       	icall
     ff0:	89 2b       	or	r24, r25
     ff2:	e1 f6       	brne	.-72     	; 0xfac <fputc+0x10>
     ff4:	d8 01       	movw	r26, r16
     ff6:	16 96       	adiw	r26, 0x06	; 6
     ff8:	8d 91       	ld	r24, X+
     ffa:	9c 91       	ld	r25, X
     ffc:	17 97       	sbiw	r26, 0x07	; 7
     ffe:	01 96       	adiw	r24, 0x01	; 1
    1000:	17 96       	adiw	r26, 0x07	; 7
    1002:	9c 93       	st	X, r25
    1004:	8e 93       	st	-X, r24
    1006:	16 97       	sbiw	r26, 0x06	; 6
    1008:	ce 01       	movw	r24, r28
    100a:	df 91       	pop	r29
    100c:	cf 91       	pop	r28
    100e:	1f 91       	pop	r17
    1010:	0f 91       	pop	r16
    1012:	08 95       	ret

00001014 <sprintf>:
    1014:	ae e0       	ldi	r26, 0x0E	; 14
    1016:	b0 e0       	ldi	r27, 0x00	; 0
    1018:	e0 e1       	ldi	r30, 0x10	; 16
    101a:	f8 e0       	ldi	r31, 0x08	; 8
    101c:	0c 94 b7 06 	jmp	0xd6e	; 0xd6e <__prologue_saves__+0x1c>
    1020:	0d 89       	ldd	r16, Y+21	; 0x15
    1022:	1e 89       	ldd	r17, Y+22	; 0x16
    1024:	86 e0       	ldi	r24, 0x06	; 6
    1026:	8c 83       	std	Y+4, r24	; 0x04
    1028:	1a 83       	std	Y+2, r17	; 0x02
    102a:	09 83       	std	Y+1, r16	; 0x01
    102c:	8f ef       	ldi	r24, 0xFF	; 255
    102e:	9f e7       	ldi	r25, 0x7F	; 127
    1030:	9e 83       	std	Y+6, r25	; 0x06
    1032:	8d 83       	std	Y+5, r24	; 0x05
    1034:	ae 01       	movw	r20, r28
    1036:	47 5e       	subi	r20, 0xE7	; 231
    1038:	5f 4f       	sbci	r21, 0xFF	; 255
    103a:	6f 89       	ldd	r22, Y+23	; 0x17
    103c:	78 8d       	ldd	r23, Y+24	; 0x18
    103e:	ce 01       	movw	r24, r28
    1040:	01 96       	adiw	r24, 0x01	; 1
    1042:	0e 94 2c 03 	call	0x658	; 0x658 <vfprintf>
    1046:	ef 81       	ldd	r30, Y+7	; 0x07
    1048:	f8 85       	ldd	r31, Y+8	; 0x08
    104a:	e0 0f       	add	r30, r16
    104c:	f1 1f       	adc	r31, r17
    104e:	10 82       	st	Z, r1
    1050:	2e 96       	adiw	r28, 0x0e	; 14
    1052:	e4 e0       	ldi	r30, 0x04	; 4
    1054:	0c 94 d3 06 	jmp	0xda6	; 0xda6 <__epilogue_restores__+0x1c>

00001058 <__ultoa_invert>:
    1058:	fa 01       	movw	r30, r20
    105a:	aa 27       	eor	r26, r26
    105c:	28 30       	cpi	r18, 0x08	; 8
    105e:	51 f1       	breq	.+84     	; 0x10b4 <__ultoa_invert+0x5c>
    1060:	20 31       	cpi	r18, 0x10	; 16
    1062:	81 f1       	breq	.+96     	; 0x10c4 <__ultoa_invert+0x6c>
    1064:	e8 94       	clt
    1066:	6f 93       	push	r22
    1068:	6e 7f       	andi	r22, 0xFE	; 254
    106a:	6e 5f       	subi	r22, 0xFE	; 254
    106c:	7f 4f       	sbci	r23, 0xFF	; 255
    106e:	8f 4f       	sbci	r24, 0xFF	; 255
    1070:	9f 4f       	sbci	r25, 0xFF	; 255
    1072:	af 4f       	sbci	r26, 0xFF	; 255
    1074:	b1 e0       	ldi	r27, 0x01	; 1
    1076:	3e d0       	rcall	.+124    	; 0x10f4 <__ultoa_invert+0x9c>
    1078:	b4 e0       	ldi	r27, 0x04	; 4
    107a:	3c d0       	rcall	.+120    	; 0x10f4 <__ultoa_invert+0x9c>
    107c:	67 0f       	add	r22, r23
    107e:	78 1f       	adc	r23, r24
    1080:	89 1f       	adc	r24, r25
    1082:	9a 1f       	adc	r25, r26
    1084:	a1 1d       	adc	r26, r1
    1086:	68 0f       	add	r22, r24
    1088:	79 1f       	adc	r23, r25
    108a:	8a 1f       	adc	r24, r26
    108c:	91 1d       	adc	r25, r1
    108e:	a1 1d       	adc	r26, r1
    1090:	6a 0f       	add	r22, r26
    1092:	71 1d       	adc	r23, r1
    1094:	81 1d       	adc	r24, r1
    1096:	91 1d       	adc	r25, r1
    1098:	a1 1d       	adc	r26, r1
    109a:	20 d0       	rcall	.+64     	; 0x10dc <__ultoa_invert+0x84>
    109c:	09 f4       	brne	.+2      	; 0x10a0 <__ultoa_invert+0x48>
    109e:	68 94       	set
    10a0:	3f 91       	pop	r19
    10a2:	2a e0       	ldi	r18, 0x0A	; 10
    10a4:	26 9f       	mul	r18, r22
    10a6:	11 24       	eor	r1, r1
    10a8:	30 19       	sub	r19, r0
    10aa:	30 5d       	subi	r19, 0xD0	; 208
    10ac:	31 93       	st	Z+, r19
    10ae:	de f6       	brtc	.-74     	; 0x1066 <__ultoa_invert+0xe>
    10b0:	cf 01       	movw	r24, r30
    10b2:	08 95       	ret
    10b4:	46 2f       	mov	r20, r22
    10b6:	47 70       	andi	r20, 0x07	; 7
    10b8:	40 5d       	subi	r20, 0xD0	; 208
    10ba:	41 93       	st	Z+, r20
    10bc:	b3 e0       	ldi	r27, 0x03	; 3
    10be:	0f d0       	rcall	.+30     	; 0x10de <__ultoa_invert+0x86>
    10c0:	c9 f7       	brne	.-14     	; 0x10b4 <__ultoa_invert+0x5c>
    10c2:	f6 cf       	rjmp	.-20     	; 0x10b0 <__ultoa_invert+0x58>
    10c4:	46 2f       	mov	r20, r22
    10c6:	4f 70       	andi	r20, 0x0F	; 15
    10c8:	40 5d       	subi	r20, 0xD0	; 208
    10ca:	4a 33       	cpi	r20, 0x3A	; 58
    10cc:	18 f0       	brcs	.+6      	; 0x10d4 <__ultoa_invert+0x7c>
    10ce:	49 5d       	subi	r20, 0xD9	; 217
    10d0:	31 fd       	sbrc	r19, 1
    10d2:	40 52       	subi	r20, 0x20	; 32
    10d4:	41 93       	st	Z+, r20
    10d6:	02 d0       	rcall	.+4      	; 0x10dc <__ultoa_invert+0x84>
    10d8:	a9 f7       	brne	.-22     	; 0x10c4 <__ultoa_invert+0x6c>
    10da:	ea cf       	rjmp	.-44     	; 0x10b0 <__ultoa_invert+0x58>
    10dc:	b4 e0       	ldi	r27, 0x04	; 4
    10de:	a6 95       	lsr	r26
    10e0:	97 95       	ror	r25
    10e2:	87 95       	ror	r24
    10e4:	77 95       	ror	r23
    10e6:	67 95       	ror	r22
    10e8:	ba 95       	dec	r27
    10ea:	c9 f7       	brne	.-14     	; 0x10de <__ultoa_invert+0x86>
    10ec:	00 97       	sbiw	r24, 0x00	; 0
    10ee:	61 05       	cpc	r22, r1
    10f0:	71 05       	cpc	r23, r1
    10f2:	08 95       	ret
    10f4:	9b 01       	movw	r18, r22
    10f6:	ac 01       	movw	r20, r24
    10f8:	0a 2e       	mov	r0, r26
    10fa:	06 94       	lsr	r0
    10fc:	57 95       	ror	r21
    10fe:	47 95       	ror	r20
    1100:	37 95       	ror	r19
    1102:	27 95       	ror	r18
    1104:	ba 95       	dec	r27
    1106:	c9 f7       	brne	.-14     	; 0x10fa <__ultoa_invert+0xa2>
    1108:	62 0f       	add	r22, r18
    110a:	73 1f       	adc	r23, r19
    110c:	84 1f       	adc	r24, r20
    110e:	95 1f       	adc	r25, r21
    1110:	a0 1d       	adc	r26, r0
    1112:	08 95       	ret

00001114 <_exit>:
    1114:	f8 94       	cli

00001116 <__stop_program>:
    1116:	ff cf       	rjmp	.-2      	; 0x1116 <__stop_program>
